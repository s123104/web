{
  "quickIndex": {
    "beginner": {
      "learning": [1, 2, 3, 4, 5],
      "practicalApplication": [1, 26, 28],
      "functionality": [1, 11, 25]
    },
    "intermediate": {
      "learning": [11, 12, 13, 14, 15],
      "practicalApplication": [2, 5, 10],
      "functionality": [2, 7, 17]
    },
    "advanced": {
      "learning": [26, 27, 28, 29, 30],
      "practicalApplication": [3, 7, 14],
      "functionality": [4, 8, 14]
    },
    "pathways": {
      "ReactWithTS": "learning: [1, 7, 13, 14] -> functionality: [1, 7, 12] -> practicalApplication: [1, 2]",
      "FullStack": "learning: [1, 10, 20, 26] -> functionality: [5, 6, 38] -> practicalApplication: [7, 14]"
    }
  },
  "learning": {
    "overview": "為初學者與中級開發者提供從前端基礎到進階技術的精簡學習路徑，幫助快速上手。",
    "beginnerGuide": "如果你是零基礎，建議從以下開始：1 (HTML)、2 (CSS)、3 (JS)，每周花 5-10 小時，3 週內掌握基礎。",
    "recommendedFor": {
      "beginner": [1, 2, 3, 4, 5],
      "intermediate": [11, 12, 13, 14, 15],
      "advanced": [26, 27, 28, 29, 30]
    },
    "items": [
      {
        "number": 1,
        "title": "HTML 語意化基礎",
        "level": "beginner",
        "category": "HTML",
        "slug": "html-semantics-basics",
        "keywords": ["HTML", "語意化", "結構"],
        "description": "HTML 語意化如夜市攞販的招牌，清晰展示頁面結構。",
        "prompt": "【請以劇場/比喻風格回應】以『個人部落格首頁（標題、導航、文章）』為例，逐步介紹 HTML 語意化標籤（如 <header>、<nav>、<article>），提供具體程式碼並解釋用途。考題：'如何用 <section> 組織內容？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["部落格結構", "SEO 優化", "簡單頁面"],
        "suggestedTimeline": "第 1 週，約 2 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 2,
        "title": "CSS 基礎樣式",
        "level": "beginner",
        "category": "CSS",
        "slug": "css-basics-styling",
        "keywords": ["CSS", "樣式", "佈局"],
        "description": "CSS 如夜市攞販的裝飾師，為頁面增添色彩。",
        "prompt": "【請以劇場/比喻風格回應】以『個人介紹卡片（姓名與照片）』為例，逐步介紹 CSS 基礎屬性（如 color、margin），提供程式碼並示範應用。考題：'如何用 CSS 居中元素？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["卡片設計", "簡單佈局", "樣式入門"],
        "suggestedTimeline": "第 1 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 3,
        "title": "JavaScript 基礎邏輯",
        "level": "beginner",
        "category": "JavaScript",
        "slug": "js-basics-logic",
        "keywords": ["JavaScript", "變數", "控制流程"],
        "description": "JS 基礎如夜市攞販的訂單邏輯，驅動動態功能。",
        "prompt": "【請以劇場/比喻風格回應】以『簡單年齡檢查（是否成人）』為例，逐步介紹 JS 變數與 if/else，提供程式碼並解釋邏輯。考題：'如何處理多條件？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["年齡驗證", "條件判斷", "基礎邏輯"],
        "suggestedTimeline": "第 2 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 4,
        "title": "CSS Flexbox 佈局",
        "level": "beginner",
        "category": "CSS",
        "slug": "css-flexbox-layout",
        "keywords": ["CSS", "Flexbox", "響應式"],
        "description": "Flexbox 如夜市攞販的靈活攤位，輕鬆排列元素。",
        "prompt": "【請以劇場/比喻風格回應】以『響應式導航欄（桌機橫排、手機直排）』為例，逐步介紹 Flexbox 屬性（如 flex-direction），提供程式碼並示範響應性。考題：'如何調整間距？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["導航條", "卡片列表", "響應佈局"],
        "suggestedTimeline": "第 2 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 5,
        "title": "JavaScript DOM 操作",
        "level": "beginner",
        "category": "JavaScript",
        "slug": "js-dom-manipulation",
        "keywords": ["JavaScript", "DOM", "事件"],
        "description": "DOM 操作如夜市攞販的即時調整，實現頁面交互。",
        "prompt": "【請以劇場/比喻風格回應】以『點擊變色按鈕』為例，逐步介紹 DOM 操作與事件監聽（getElementById、addEventListener），提供程式碼並解釋交互。考題：'如何選取多元素？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["按鈕交互", "動態內容", "事件處理"],
        "suggestedTimeline": "第 3 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 6,
        "title": "JavaScript 函式與迴圈",
        "level": "beginner",
        "category": "JavaScript",
        "slug": "js-functions-loops",
        "keywords": ["JavaScript", "函式", "迴圈"],
        "description": "函式與迴圈如夜市攞販的配方與重複作業，模組化邏輯。",
        "prompt": "【請以劇場/比喻風格回應】以『數字列表（打印 1-5）』為例，介紹函式定義與 for 迴圈，提供程式碼並解釋重用性。考題：'何時用 while？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["列表生成", "重複任務", "邏輯封裝"],
        "suggestedTimeline": "第 3 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 7,
        "title": "React 組件基礎",
        "level": "beginner",
        "category": "React",
        "slug": "react-components-basics",
        "keywords": ["React", "組件", "狀態"],
        "description": "React 組件如夜市攞販的模組攤位，快速構建介面。",
        "prompt": "【請以劇場/比喻風格回應】以『計數器組件』為例，介紹 React 組件與 useState，提供程式碼並解釋狀態管理。考題：'Props 與 State 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["計數器", "簡單組件", "狀態交互"],
        "suggestedTimeline": "第 4 週，約 4 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 8,
        "title": "CSS Grid 佈局",
        "level": "beginner",
        "category": "CSS",
        "slug": "css-grid-layout",
        "keywords": ["CSS", "Grid", "網格"],
        "description": "CSS Grid 如夜市攞販的攤位規劃，精準分區佈局。",
        "prompt": "【請以劇場/比喻風格回應】以『三欄新聞頁（頭條、側邊欄、廣告）』為例，介紹 Grid 屬性（如 grid-template-columns），提供程式碼並示範分區。考題：'Grid 與 Flexbox 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["新聞頁面", "複雜佈局", "網格設計"],
        "suggestedTimeline": "第 4 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 9,
        "title": "Git 版本控制基礎",
        "level": "beginner",
        "category": "Tools",
        "slug": "git-version-control-basics",
        "keywords": ["Git", "版本控制", "分支"],
        "description": "Git 如夜市攞販的進貨日誌，管理程式碼版本。",
        "prompt": "【請以劇場/比喻風格回應】以『簡單文字檔案』為例，介紹 Git 基礎操作（init、commit、branch），提供命令並解釋流程。考題：'如何解決衝突？' 若有疑問請貼上［命令］，我將協助解答。",
        "applicationScenarios": ["版本追踪", "分支管理", "協作基礎"],
        "suggestedTimeline": "第 5 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 10,
        "title": "JavaScript 非同步基礎",
        "level": "intermediate",
        "category": "JavaScript",
        "slug": "js-async-basics",
        "keywords": ["JavaScript", "非同步", "Promise"],
        "description": "非同步如夜市攞販的排隊叫號，協調數據請求。",
        "prompt": "【請以劇場/比喻風格回應】以『從 API 獲取用戶資料』為例，介紹 Promise 用法，提供程式碼並解釋異步流程。考題：'如何處理錯誤？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["API 請求", "數據載入", "異步處理"],
        "suggestedTimeline": "第 5 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 11,
        "title": "React 路由基礎",
        "level": "intermediate",
        "category": "React",
        "slug": "react-routing-basics",
        "keywords": ["React", "路由", "React Router"],
        "description": "React 路由如夜市攞販的導覽圖，實現頁面切換。",
        "prompt": "【請以劇場/比喻風格回應】以『多頁應用（首頁與關於）』為例，介紹 React Router，提供程式碼並解釋路由配置。考題：'如何傳遞參數？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["多頁切換", "導航系統", "動態頁面"],
        "suggestedTimeline": "第 6 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 12,
        "title": "npm 套件管理",
        "level": "intermediate",
        "category": "Tools",
        "slug": "npm-package-management",
        "keywords": ["npm", "套件", "依賴"],
        "description": "npm 如夜市攞販的工具庫，管理依賴與腳本。",
        "prompt": "【請以劇場/比喻風格回應】以『安裝 React 與腳本自動化』為例，介紹 npm 操作（install、scripts），提供命令並解釋用途。考題：'如何解決版本衝突？' 若有疑問請貼上［命令］，我將協助解答。",
        "applicationScenarios": ["依賴安裝", "腳本自動化", "工具管理"],
        "suggestedTimeline": "第 6 週，約 2 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 13,
        "title": "React Hooks 進階",
        "level": "intermediate",
        "category": "React",
        "slug": "react-hooks-advanced",
        "keywords": ["React", "Hooks", "useEffect"],
        "description": "Hooks 進階如夜市攞販的自動補貨，處理副作用。",
        "prompt": "【請以劇場/比喻風格回應】以『計時器（每秒更新）』為例，介紹 useEffect 用法，提供程式碼並解釋副作用管理。考題：'如何清理副作用？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["計時器", "數據更新", "副作用處理"],
        "suggestedTimeline": "第 7 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 14,
        "title": "TypeScript 基礎",
        "level": "intermediate",
        "category": "JavaScript",
        "slug": "typescript-basics",
        "keywords": ["TypeScript", "類型", "靜態檢查"],
        "description": "TypeScript 如夜市攞販的品質保證，增強程式穩定性。",
        "prompt": "【請以劇場/比喻風格回應】以『用戶資料函式』為例，介紹 TypeScript 類型定義，提供程式碼並解釋靜態檢查。考題：'如何定義接口？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["類型安全", "資料處理", "程式穩定"],
        "suggestedTimeline": "第 7 週，約 4 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 15,
        "title": "React Context 狀態管理",
        "level": "intermediate",
        "category": "React",
        "slug": "react-context-state",
        "keywords": ["React", "Context", "全局狀態"],
        "description": "Context 如夜市攞販的統一訂單，管理全局狀態。",
        "prompt": "【請以劇場/比喻風格回應】以『主題切換（明暗模式）』為例，介紹 React Context，提供程式碼並解釋狀態共享。考題：'Context 與 Redux 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["主題管理", "全局配置", "狀態共享"],
        "suggestedTimeline": "第 8 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 16,
        "title": "JavaScript 非同步進階",
        "level": "intermediate",
        "category": "JavaScript",
        "slug": "js-async-advanced",
        "keywords": ["JavaScript", "async/await", "非同步"],
        "description": "async/await 如夜市攞販的順序點餐，優化異步流程。",
        "prompt": "【請以劇場/比喻風格回應】以『從 API 獲取天氣資料』為例，介紹 async/await，提供程式碼並解釋異步優化。考題：'如何處理多請求？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["天氣數據", "多 API 請求", "異步優化"],
        "suggestedTimeline": "第 8 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 17,
        "title": "Vite 快速構建",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "vite-quick-build",
        "keywords": ["Vite", "構建", "熱重載"],
        "description": "Vite 如夜市攞販的高速攤車，加速開發流程。",
        "prompt": "【請以劇場/比喻風格回應】以『簡單 React 項目』為例，介紹 Vite 構建，提供命令與程式碼並解釋優勢。考題：'Vite 如何提升速度？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["快速原型", "React 應用", "開發加速"],
        "suggestedTimeline": "第 9 週，約 2 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 18,
        "title": "React 表單處理",
        "level": "intermediate",
        "category": "React",
        "slug": "react-form-handling",
        "keywords": ["React", "表單", "輸入"],
        "description": "React 表單如夜市攞販的訂單表，收集用戶數據。",
        "prompt": "【請以劇場/比喻風格回應】以『登入表單（用戶名與密碼）』為例，介紹 React 表單處理，提供程式碼並解釋輸入管理。考題：'如何驗證輸入？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["登入頁面", "數據收集", "表單交互"],
        "suggestedTimeline": "第 9 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 19,
        "title": "Jest 單元測試",
        "level": "intermediate",
        "category": "Testing",
        "slug": "jest-unit-testing",
        "keywords": ["Jest", "單元測試", "品質"],
        "description": "Jest 如夜市攞販的質檢員，確保程式碼穩定。",
        "prompt": "【請以劇場/比喻風格回應】以『加法函式』為例，介紹 Jest 單元測試，提供程式碼並解釋測試流程。考題：'如何測試異步函式？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["函式測試", "組件驗證", "品質保證"],
        "suggestedTimeline": "第 10 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 20,
        "title": "Next.js 靜態生成",
        "level": "intermediate",
        "category": "Frameworks",
        "slug": "nextjs-static-generation",
        "keywords": ["Next.js", "靜態生成", "SEO"],
        "description": "Next.js 靜態生成如夜市攞販的預製便當，提升載入速度。",
        "prompt": "【請以劇場/比喻風格回應】以『作品集頁面』為例，介紹 Next.js 靜態生成（getStaticProps），提供程式碼並解釋 SEO 優勢。考題：'SSR 與 SSG 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["靜態網站", "SEO 頁面", "快速載入"],
        "suggestedTimeline": "第 10 週，約 4 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 21,
        "title": "CSS 框架應用",
        "level": "intermediate",
        "category": "CSS",
        "slug": "css-framework-application",
        "keywords": ["CSS", "Tailwind", "框架"],
        "description": "CSS 框架如夜市攞販的萬用工具箱，快速打造介面。",
        "prompt": "【請以劇場/比喻風格回應】以『響應式卡片（Tailwind CSS）』為例，介紹 CSS 框架應用，提供程式碼並解釋工具類優勢。考題：'如何自訂樣式？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["響應式設計", "快速原型", "佈局優化"],
        "suggestedTimeline": "第 10 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 22,
        "title": "React 自訂 Hook",
        "level": "intermediate",
        "category": "React",
        "slug": "react-custom-hooks",
        "keywords": ["React", "自訂 Hook", "重用性"],
        "description": "自訂 Hook 如夜市攞販的獨門醬料，提升程式碼重用性。",
        "prompt": "【請以劇場/比喻風格回應】以『計數器 Hook』為例，介紹自訂 Hook，提供程式碼並解釋邏輯重用。考題：'何時需要自訂 Hook？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["計數功能", "邏輯封裝", "重用模組"],
        "suggestedTimeline": "第 11 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 23,
        "title": "Webpack 打包基礎",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "webpack-bundling-basics",
        "keywords": ["Webpack", "打包", "模組"],
        "description": "Webpack 如夜市攞販的打包機，整合資源。",
        "prompt": "【請以劇場/比喻風格回應】以『簡單 JS 與 CSS 項目』為例，介紹 Webpack 打包，提供配置與程式碼並解釋流程。考題：'如何處理多檔案？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["資源打包", "模組管理", "構建流程"],
        "suggestedTimeline": "第 11 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 24,
        "title": "Vue.js 組件基礎",
        "level": "intermediate",
        "category": "Frameworks",
        "slug": "vuejs-components-basics",
        "keywords": ["Vue.js", "組件", "響應式"],
        "description": "Vue.js 組件如夜市攞販的靈活攤位，打造動態介面。",
        "prompt": "【請以劇場/比喻風格回應】以『計數器組件』為例，介紹 Vue.js 組件與響應式數據，提供程式碼並解釋雙向綁定。考題：'Vue 與 React 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["計數器", "響應式頁面", "組件設計"],
        "suggestedTimeline": "第 11 週，約 4 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 25,
        "title": "Cypress 端到端測試",
        "level": "intermediate",
        "category": "Testing",
        "slug": "cypress-e2e-testing",
        "keywords": ["Cypress", "E2E", "測試"],
        "description": "Cypress 如夜市攞販的顧客模擬員，測試完整流程。",
        "prompt": "【請以劇場/比喻風格回應】以『登入流程』為例，介紹 Cypress 端到端測試，提供程式碼並解釋測試流程。考題：'如何模擬用戶行為？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["登入測試", "流程驗證", "自動化測試"],
        "suggestedTimeline": "第 12 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 26,
        "title": "Serverless API 基礎",
        "level": "advanced",
        "category": "Backend",
        "slug": "serverless-api-basics",
        "keywords": ["Serverless", "AWS Lambda", "API"],
        "description": "Serverless API 如夜市攞販的自動化廚房，無伺服器運行。",
        "prompt": "【請以劇場/比喻風格回應】以『問候 API』為例，介紹 Serverless（AWS Lambda）基礎，提供程式碼並解釋部署流程。考題：'Serverless 優勢？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["簡單 API", "雲端服務", "事件處理"],
        "suggestedTimeline": "第 12 週，約 4 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 27,
        "title": "Docker 容器化基礎",
        "level": "advanced",
        "category": "DevOps",
        "slug": "docker-containerization-basics",
        "keywords": ["Docker", "容器化", "部署"],
        "description": "Docker 如夜市攞販的標準化攤位，確保環境一致。",
        "prompt": "【請以劇場/比喻風格回應】以『Node.js 應用』為例，介紹 Docker 容器化，提供 Dockerfile 與命令並解釋流程。考題：'如何優化容器？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["應用部署", "環境一致", "容器管理"],
        "suggestedTimeline": "第 12 週，約 4 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 28,
        "title": "GraphQL 查詢基礎",
        "level": "advanced",
        "category": "API",
        "slug": "graphql-query-basics",
        "keywords": ["GraphQL", "查詢", "API"],
        "description": "GraphQL 如夜市攞販的自選菜單，按需索取數據。",
        "prompt": "【請以劇場/比喻風格回應】以『用戶查詢（姓名與年齡）』為例，介紹 GraphQL 查詢，提供程式碼並解釋靈活性。考題：'GraphQL 如何減少過度獲取？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["用戶數據查詢", "API 靈活獲取", "數據管理"],
        "suggestedTimeline": "第 12 週，約 3 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 29,
        "title": "WebAssembly 效能優化",
        "level": "advanced",
        "category": "Performance",
        "slug": "webassembly-performance",
        "keywords": ["WebAssembly", "效能", "WASM"],
        "description": "WebAssembly 如夜市攞販的火箭引擎，提升計算效能。",
        "prompt": "【請以劇場/比喻風格回應】以『計算斐波那契數列』為例，介紹 WebAssembly，提供程式碼並解釋效能提升。考題：'WASM 與 JS 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["高效計算", "遊戲邏輯", "數據處理"],
        "suggestedTimeline": "第 12 週，約 5 小時",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 30,
        "title": "AI 整合基礎",
        "level": "advanced",
        "category": "AI",
        "slug": "ai-integration-basics",
        "keywords": ["AI", "ChatGPT", "整合"],
        "description": "AI 整合如夜市攞販的智能助手，提升應用功能。",
        "prompt": "【請以劇場/比喻風格回應】以『問答介面』為例，介紹與 ChatGPT API 整合，提供程式碼並解釋智能交互。考題：'如何優化 AI 回應？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "applicationScenarios": ["問答系統", "智能客服", "內容生成"],
        "suggestedTimeline": "第 12 週，約 4 小時",
        "lastUpdated": "2025-03-01"
      }
    ]
  },
  "practicalApplication": {
    "overview": "提供 30 個實用前端應用場景，幫助開發者將技術應用於實際專案。",
    "beginnerGuide": "零基礎建議從以下開始：1 (企業官網)、26 (個人作品集)，逐步熟悉 React 與簡單佈局。",
    "recommendedFor": {
      "beginner": [1, 26, 28],
      "intermediate": [2, 5, 10],
      "advanced": [3, 7, 14]
    },
    "items": [
      {
        "number": 1,
        "title": "企業官網",
        "level": "intermediate",
        "category": "Web Development",
        "slug": "corporate-website",
        "keywords": ["React", "Tailwind CSS", "企業"],
        "description": "打造企業官網，如夜市攞販的品牌櫥窗，展示專業形象。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Tailwind CSS，生成企業官網程式碼：含首頁、關於、服務、聯絡頁，支援響應式佈局與互動效果（如懸停）。請依需求提供：［例如：藍色調 #007BFF、字體 Roboto］。",
        "demoDescription": "頁面含頂部導航（藍色背景、白字）、主視覺橫幅、服務卡片（三欄式，懸停放大）、底部聯絡表單。",
        "applicationScenarios": ["企業形象頁", "品牌展示", "聯絡頁面"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 2,
        "title": "電商平台前端",
        "level": "advanced",
        "category": "E-commerce",
        "slug": "ecommerce-frontend",
        "keywords": ["React", "Redux", "電商"],
        "description": "打造電商前端，如夜市攞販的購物街，實現產品瀏覽與結帳。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Redux，生成電商前端程式碼：含產品展示（圖片與價格）、購物車、結帳流程。請依需求提供：［例如：綠色調 #28A745、支援篩選］。",
        "demoDescription": "頁面含產品網格（四欄，帶價格標籤）、右側浮動購物車（顯示總額）、結帳按鈕（綠色高亮）。",
        "applicationScenarios": ["線上商店", "產品目錄", "結帳系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 3,
        "title": "線上教育平台",
        "level": "advanced",
        "category": "Education",
        "slug": "online-education",
        "keywords": ["React", "React Query", "教育"],
        "description": "打造教育平台，如夜市攞販的數位教室，提供課程與測驗。",
        "prompt": "【零代碼提示 🚀】使用 React 與 React Query，生成教育平台程式碼：含課程列表、影片播放、測驗功能。請依需求提供：［例如：藍灰調 #4682B4、含進度條］。",
        "demoDescription": "頁面含課程卡片（標題與縮圖）、影片播放器（下方進度條）、測驗區（選擇題與提交按鈕）。",
        "applicationScenarios": ["課程展示", "學習管理", "測驗系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 4,
        "title": "社交媒體動態",
        "level": "advanced",
        "category": "Social Media",
        "slug": "social-media-feed",
        "keywords": ["React", "WebSocket", "社交"],
        "description": "打造社交動態，如夜市攞販的熱鬧叫賣區，實現即時更新。",
        "prompt": "【零代碼提示 🚀】使用 React 與 WebSocket，生成社交動態程式碼：含動態列表、評論區、即時更新。請依需求提供：［例如：紫色調 #800080、支援点赞］。",
        "demoDescription": "頁面含動態卡片（頭像、內容、時間戳）、下方評論輸入框、右側点赞按鈕（紫色心型）。",
        "applicationScenarios": ["社群動態", "即時互動", "評論功能"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 5,
        "title": "任務管理工具",
        "level": "intermediate",
        "category": "Productivity",
        "slug": "task-manager",
        "keywords": ["React", "Drag-and-Drop", "任務"],
        "description": "打造任務工具，如夜市攞販的數位看板，管理待辦事項。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Drag-and-Drop（如 react-beautiful-dnd），生成任務管理程式碼：含拖拉任務卡片、分組、同步功能。請依需求提供：［例如：橙色調 #FFA500、三欄佈局］。",
        "demoDescription": "頁面含三欄（待辦、進行中、完成），每欄有多張橙色任務卡片（可拖拉移動）。",
        "applicationScenarios": ["個人待辦", "團隊任務", "看板管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 6,
        "title": "票務預約系統",
        "level": "intermediate",
        "category": "Booking",
        "slug": "ticketing-system",
        "keywords": ["React", "React Hook Form", "預約"],
        "description": "打造票務系統，如夜市攞販的訂票攤，提供預約功能。",
        "prompt": "【零代碼提示 🚀】使用 React 與 React Hook Form，生成票務預約程式碼：含座位選擇、訂單生成、支付模組。請依需求提供：［例如：紅色調 #FF4500、含日期選擇器］。",
        "demoDescription": "頁面含座位圖（紅色高亮已選）、日期選擇器、右側訂單總覽（含支付按鈕）。",
        "applicationScenarios": ["電影票務", "活動預約", "訂位系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 7,
        "title": "企業 CRM 前端",
        "level": "advanced",
        "category": "Business",
        "slug": "crm-frontend",
        "keywords": ["React", "Redux", "CRM"],
        "description": "打造 CRM 前端，如夜市攞販的客戶管理中樞，追踪資料。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Redux，生成 CRM 前端程式碼：含客戶列表、聯絡記錄、數據報表。請依需求提供：［例如：藍色調 #1E90FF、含圖表］。",
        "demoDescription": "頁面含左側客戶列表（可點選展開）、中間聯絡記錄、右側藍色圓環圖報表。",
        "applicationScenarios": ["客戶管理", "銷售追踪", "數據分析"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 8,
        "title": "即時客服系統",
        "level": "intermediate",
        "category": "Customer Support",
        "slug": "real-time-support",
        "keywords": ["React", "Socket.io", "客服"],
        "description": "打造客服系統，如夜市攞販的即時服務站，提供線上支援。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Socket.io，生成即時客服程式碼：含聊天介面、自動回覆、工單生成。請依需求提供：［例如：綠色調 #32CD32、支援即時訊息］。",
        "demoDescription": "頁面含右下角聊天框（綠色邊框）、自動回覆提示、頂部工單狀態標籤。",
        "applicationScenarios": ["線上客服", "即時支援", "工單管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 9,
        "title": "聊天應用",
        "level": "advanced",
        "category": "Communication",
        "slug": "chat-application",
        "keywords": ["React", "WebSocket", "聊天"],
        "description": "打造聊天應用，如夜市攞販的對話攤，實現即時通訊。",
        "prompt": "【零代碼提示 🚀】使用 React 與 WebSocket，生成聊天應用程式碼：含訊息列表、輸入框、檔案傳輸。請依需求提供：［例如：灰藍調 #708090、支援圖片］。",
        "demoDescription": "頁面含左側訊息列表（灰藍背景）、底部輸入框與圖片上傳按鈕。",
        "applicationScenarios": ["即時聊天", "檔案分享", "通訊工具"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 10,
        "title": "線上論壇",
        "level": "intermediate",
        "category": "Community",
        "slug": "online-forum",
        "keywords": ["React", "Firebase", "論壇"],
        "description": "打造線上論壇，如夜市攞販的討論區，促進用戶交流。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Firebase，生成論壇程式碼：含主題列表、貼文、回覆功能。請依需求提供：［例如：橙色調 #FF8C00、支援即時更新］。",
        "demoDescription": "頁面含主題列表（橙色標題）、貼文卡片（含回覆數）、底部回覆輸入框。",
        "applicationScenarios": ["討論區", "問答平台", "社群交流"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 11,
        "title": "旅遊景點地圖",
        "level": "intermediate",
        "category": "Travel",
        "slug": "tourism-map",
        "keywords": ["React", "Google Maps", "旅遊"],
        "description": "打造旅遊地圖，如夜市攞販的美食地圖，指引景點。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Google Maps API，生成旅遊地圖程式碼：含景點標記、評論、地圖導航。請依需求提供：［例如：綠色調 #228B22、支援搜尋］。",
        "demoDescription": "頁面含全屏地圖（綠色標記點）、頂部搜尋欄、點擊彈出評論框。",
        "applicationScenarios": ["旅遊指南", "地圖定位", "景點評論"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 12,
        "title": "多語系網站",
        "level": "intermediate",
        "category": "Web Development",
        "slug": "multilingual-site",
        "keywords": ["React", "i18next", "多語系"],
        "description": "打造多語系網站，如夜市攞販的多國菜單，支援國際化。",
        "prompt": "【零代碼提示 🚀】使用 React 與 i18next，生成多語系網站程式碼：含語言切換、內容翻譯、UI 調整。請依需求提供：［例如：藍色調 #4169E1、支援中英］。",
        "demoDescription": "頁面含頂部語言切換下拉選單（藍色邊框）、主內容區（根據語言動態切換）。",
        "applicationScenarios": ["國際網站", "多語言頁面", "全球化應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 13,
        "title": "數據儀表板",
        "level": "advanced",
        "category": "Data Visualization",
        "slug": "data-dashboard",
        "keywords": ["React", "D3.js", "儀表板"],
        "description": "打造數據儀表板，如夜市攞販的營收看板，展示數據。",
        "prompt": "【零代碼提示 🚀】使用 React 與 D3.js，生成數據儀表板程式碼：含圖表展示（柱狀圖、折線圖）、數據更新。請依需求提供：［例如：藍綠調 #20B2AA、支援即時數據］。",
        "demoDescription": "頁面含左側藍綠柱狀圖、中間折線圖、右側數據總覽（即時刷新）。",
        "applicationScenarios": ["營收分析", "數據監控", "視覺化報表"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 14,
        "title": "部落格管理系統",
        "level": "advanced",
        "category": "Content Management",
        "slug": "blog-cms",
        "keywords": ["React", "Firebase", "CMS"],
        "description": "打造部落格 CMS，如夜市攞販的後台編輯室，管理內容。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Firebase，生成部落格管理程式碼：含文章編輯、分類、評論管理。請依需求提供：［例如：灰色調 #696969、支援即時儲存］。",
        "demoDescription": "頁面含左側文章列表（灰色卡片）、中間編輯區（含儲存按鈕）、右側評論管理區。",
        "applicationScenarios": ["內容管理", "文章編輯", "評論審核"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 15,
        "title": "線上投票工具",
        "level": "intermediate",
        "category": "Survey",
        "slug": "online-voting",
        "keywords": ["React", "Chart.js", "投票"],
        "description": "打造投票工具，如夜市攞販的意見箱，收集反饋。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Chart.js，生成投票工具程式碼：含投票選項、結果圖表（柱狀圖）。請依需求提供：［例如：藍色調 #1E90FF、支援即時統計］。",
        "demoDescription": "頁面含投票選項（藍色單選按鈕）、下方柱狀圖（即時更新票數）。",
        "applicationScenarios": ["意見調查", "投票統計", "結果展示"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 16,
        "title": "預約管理系統",
        "level": "intermediate",
        "category": "Booking",
        "slug": "appointment-system",
        "keywords": ["React", "React Hook Form", "預約"],
        "description": "打造預約系統，如夜市攞販的訂位站，管理時間。",
        "prompt": "【零代碼提示 🚀】使用 React 與 React Hook Form，生成預約管理程式碼：含時間選擇、預約表單、通知功能。請依需求提供：［例如：綠色調 #32CD32、含日曆］。",
        "demoDescription": "頁面含日曆選擇器（綠色高亮日期）、右側預約表單（含提交按鈕）。",
        "applicationScenarios": ["時間預約", "活動訂位", "通知系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 17,
        "title": "社交活動頁面",
        "level": "intermediate",
        "category": "Community",
        "slug": "social-event-page",
        "keywords": ["React", "Firebase", "活動"],
        "description": "打造活動頁面，如夜市攞販的公告欄，促進參與。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Firebase，生成社交活動頁面程式碼：含活動列表、報名功能、即時更新。請依需求提供：［例如：橙色調 #FF8C00、支援通知］。",
        "demoDescription": "頁面含活動卡片（橙色標題與報名按鈕）、右側即時通知區。",
        "applicationScenarios": ["活動報名", "社群互動", "即時更新"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 18,
        "title": "移動應用原型",
        "level": "intermediate",
        "category": "Mobile",
        "slug": "mobile-app-prototype",
        "keywords": ["React Native", "移動", "UI"],
        "description": "打造移動原型，如夜市攞販的行動菜單，提供 UI 設計。",
        "prompt": "【零代碼提示 🚀】使用 React Native，生成移動應用原型程式碼：含簡單 UI、導航、適配功能。請依需求提供：［例如：紅色調 #FF4500、支援 iOS/Android］。",
        "demoDescription": "頁面含頂部紅色導航條、底部選項卡、中間簡單卡片列表。",
        "applicationScenarios": ["移動 UI", "應用原型", "跨平台體驗"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 19,
        "title": "桌面工具應用",
        "level": "advanced",
        "category": "Desktop",
        "slug": "desktop-tool-app",
        "keywords": ["Electron", "React", "桌面"],
        "description": "打造桌面工具，如夜市攞販的辦公助手，提升效率。",
        "prompt": "【零代碼提示 🚀】使用 Electron 與 React，生成桌面工具程式碼：含介面設計、檔案存取、後台功能。請依需求提供：［例如：灰色調 #696969、支援檔案讀取］。",
        "demoDescription": "視窗含灰色工具列（檔案選單）、中間內容區（顯示檔案內容）。",
        "applicationScenarios": ["檔案管理", "桌面工具", "跨平台應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 20,
        "title": "支付結帳模組",
        "level": "advanced",
        "category": "Payment",
        "slug": "payment-checkout",
        "keywords": ["React", "Stripe", "支付"],
        "description": "打造支付模組，如夜市攞販的收銀機，處理交易。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Stripe，生成支付結帳程式碼：含支付表單、交易處理、安全驗證。請依需求提供：［例如：綠色調 #32CD32、支援信用卡］。",
        "demoDescription": "頁面含綠色支付表單（卡號、到期日）、底部提交按鈕（帶安全圖示）。",
        "applicationScenarios": ["線上結帳", "交易模組", "支付系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 21,
        "title": "OAuth 登入頁面",
        "level": "intermediate",
        "category": "Authentication",
        "slug": "oauth-login",
        "keywords": ["React", "OAuth", "登入"],
        "description": "打造 OAuth 登入，如夜市攞販的通行證，實現快速認證。",
        "prompt": "【零代碼提示 🚀】使用 React 與 OAuth（Google），生成登入頁面程式碼：含登入按鈕、認證流程。請依需求提供：［例如：藍色調 #1E90FF、支援 Google］。",
        "demoDescription": "頁面含藍色 Google 登入按鈕、中心簡單標誌、成功後跳轉提示。",
        "applicationScenarios": ["快速登入", "第三方認證", "用戶管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 22,
        "title": "郵件通知系統",
        "level": "intermediate",
        "category": "Notification",
        "slug": "email-notification",
        "keywords": ["React", "Node.js", "郵件"],
        "description": "打造郵件通知，如夜市攞販的優惠推送，提醒用戶。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Node.js（nodemailer），生成郵件通知程式碼：含通知表單、定時發送。請依需求提供：［例如：橙色調 #FFA500、每日發送］。",
        "demoDescription": "頁面含橙色通知表單（收件人、內容）、右側發送按鈕與定時選項。",
        "applicationScenarios": ["促銷通知", "訂單確認", "定時提醒"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 23,
        "title": "音樂播放器",
        "level": "advanced",
        "category": "Multimedia",
        "slug": "music-player",
        "keywords": ["React", "Web Audio", "音樂"],
        "description": "打造音樂播放器，如夜市攞販的音樂攤，提供串流功能。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Web Audio API，生成音樂播放器程式碼：含播放控制、進度條、歌單。請依需求提供：［例如：紫色調 #800080、支援 MP3］。",
        "demoDescription": "頁面含紫色播放器（播放/暫停按鈕）、進度條、右側歌單列表。",
        "applicationScenarios": ["音樂播放", "串流服務", "歌單管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 24,
        "title": "視訊直播頁面",
        "level": "advanced",
        "category": "Multimedia",
        "slug": "video-streaming",
        "keywords": ["React", "WebRTC", "直播"],
        "description": "打造視訊直播，如夜市攞販的直播攤，提供即時互動。",
        "prompt": "【零代碼提示 🚀】使用 React 與 WebRTC，生成視訊直播程式碼：含直播流、聊天區、評論功能。請依需求提供：［例如：紅色調 #FF4500、支援即時評論］。",
        "demoDescription": "頁面含全屏直播視窗（紅色邊框）、右側聊天欄、底部評論輸入框。",
        "applicationScenarios": ["直播展示", "視訊互動", "即時評論"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 25,
        "title": "行為分析工具",
        "level": "advanced",
        "category": "Analytics",
        "slug": "behavior-analytics",
        "keywords": ["React", "D3.js", "分析"],
        "description": "打造行為分析，如夜市攞販的顧客洞察，追踪數據。",
        "prompt": "【零代碼提示 🚀】使用 React 與 D3.js，生成行為分析程式碼：含數據收集、可視化（熱力圖）、報表。請依需求提供：［例如：藍綠調 #20B2AA、支援即時更新］。",
        "demoDescription": "頁面含熱力圖（藍綠漸變）、左側數據統計表、中間即時更新區。",
        "applicationScenarios": ["行為追踪", "數據分析", "熱力圖展示"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 26,
        "title": "個人作品集",
        "level": "beginner",
        "category": "Portfolio",
        "slug": "personal-portfolio",
        "keywords": ["React", "Tailwind CSS", "作品"],
        "description": "打造作品集，如夜市攞販的數位名片，展示技能。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Tailwind CSS，生成個人作品集程式碼：含作品展示、技能區、聯絡表單。請依需求提供：［例如：紫色調 #800080、含三個作品］。",
        "demoDescription": "頁面含紫色頂部標題、作品卡片（三欄式）、底部聯絡表單。",
        "applicationScenarios": ["個人展示", "技能列表", "聯絡頁面"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 27,
        "title": "IoT 監控介面",
        "level": "advanced",
        "category": "IoT",
        "slug": "iot-monitoring",
        "keywords": ["React", "AWS IoT", "監控"],
        "description": "打造 IoT 監控，如夜市攞販的設備中控，管理數據。",
        "prompt": "【零代碼提示 🚀】使用 React 與 AWS IoT，生成監控介面程式碼：含數據顯示、控制按鈕、警報功能。請依需求提供：［例如：藍綠調 #20B2AA、支援溫度監控］。",
        "demoDescription": "頁面含藍綠數據顯示區（溫度數值）、中間控制按鈕、右側警報提示框。",
        "applicationScenarios": ["設備監控", "數據管理", "警報系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 28,
        "title": "零代碼設計工具",
        "level": "beginner",
        "category": "No-Code",
        "slug": "no-code-design-tool",
        "keywords": ["React", "Drag-and-Drop", "設計"],
        "description": "打造設計工具，如夜市攞販的拼裝站，簡單生成頁面。",
        "prompt": "【零代碼提示 🚀】使用 React 與 Drag-and-Drop（如 react-beautiful-dnd），生成設計工具程式碼：含拖拉模組、編輯介面。請依需求提供：［例如：灰色調 #696969、支援文字模組］。",
        "demoDescription": "頁面含灰色拖拉區域（文字與圖片模組）、右側簡單編輯欄。",
        "applicationScenarios": ["頁面設計", "零代碼原型", "模組拼裝"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 29,
        "title": "內容生成頁面",
        "level": "advanced",
        "category": "AI",
        "slug": "content-generator",
        "keywords": ["React", "ChatGPT", "內容"],
        "description": "打造內容生成頁面，如夜市攞販的 AI 文案助手，自動創作。",
        "prompt": "【零代碼提示 🚀】使用 React 與 ChatGPT API，生成內容頁面程式碼：含輸入框、生成按鈕、結果展示。請依需求提供：［例如：紫色調 #800080、支援文章生成］。",
        "demoDescription": "頁面含紫色輸入框（上方）、生成按鈕、中間結果顯示區（分段文字）。",
        "applicationScenarios": ["文章創作", "內容生成", "智能助手"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 30,
        "title": "醫療預約頁面",
        "level": "intermediate",
        "category": "Healthcare",
        "slug": "medical-booking",
        "keywords": ["React", "React Hook Form", "醫療"],
        "description": "打造醫療預約頁面，如夜市攞販的掛號站，管理預約。",
        "prompt": "【零代碼提示 🚀】使用 React 與 React Hook Form，生成醫療預約程式碼：含時間選擇、表單提交、通知功能。請依需求提供：［例如：藍色調 #4169E1、支援提醒］。",
        "demoDescription": "頁面含藍色時間選擇器（日曆與時段）、下方表單（姓名與電話）、提交後提醒提示。",
        "applicationScenarios": ["醫療預約", "時間管理", "患者通知"],
        "lastUpdated": "2025-03-01"
      }
    ]
  },
  "functionality": {
    "overview": "提供 40 個技術實作協助，根據需求實現功能，從基礎到進階。",
    "beginnerGuide": "零基礎建議從以下開始：1 (React 狀態)、11 (Tailwind 主題)、25 (ESLint)，逐步掌握基礎工具與框架。",
    "recommendedFor": {
      "beginner": [1, 11, 25],
      "intermediate": [2, 7, 17],
      "advanced": [4, 8, 14]
    },
    "items": [
      {
        "number": 1,
        "title": "實現 React 組件狀態",
        "level": "beginner",
        "category": "React",
        "slug": "react-component-state",
        "keywords": ["React", "useState", "狀態"],
        "description": "React 狀態如夜市攞販的訂單簿，管理動態數據。",
        "prompt": "【功能應用】使用 React 的 useState 實現組件狀態管理，提供程式碼完成：［請描述需求，如 '計數器點擊增加'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何避免重複渲染'）。",
        "requiredInfo": ["組件需求", "目前程式碼", "期望結果"],
        "applicationScenarios": ["計數器", "表單狀態", "交互邏輯"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 2,
        "title": "優化 Vite 構建效能",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "vite-build-optimization",
        "keywords": ["Vite", "構建", "效能"],
        "description": "Vite 優化如夜市攞販的高速攤車，提升構建效率。",
        "prompt": "【功能應用】使用 Vite 優化構建效能，提供程式碼完成：［請描述需求，如 '減少打包大小'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何分離依賴'）。",
        "requiredInfo": ["Vite 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["快速部署", "大型應用", "效能提升"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 3,
        "title": "實現 Astro 靜態生成",
        "level": "intermediate",
        "category": "Frameworks",
        "slug": "astro-static-generation",
        "keywords": ["Astro", "靜態生成", "SEO"],
        "description": "Astro 靜態生成如夜市攞販的預製攤位，快速生成頁面。",
        "prompt": "【功能應用】使用 Astro 實現靜態頁面生成，提供程式碼完成：［請描述需求，如 '生成部落格頁面'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何提升載入速度'）。",
        "requiredInfo": ["Astro 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["部落格", "靜態官網", "SEO 頁面"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 4,
        "title": "整合 WebAssembly 計算",
        "level": "advanced",
        "category": "Performance",
        "slug": "webassembly-computation",
        "keywords": ["WebAssembly", "計算", "效能"],
        "description": "WebAssembly 如夜市攞販的火箭引擎，加速計算任務。",
        "prompt": "【功能應用】整合 WebAssembly 提升計算效能，提供程式碼完成：［請描述需求，如 '計算斐波那契數列'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何與 JS 整合'）。",
        "requiredInfo": ["WASM 程式碼", "目前程式碼", "期望結果"],
        "applicationScenarios": ["高效計算", "遊戲邏輯", "數據處理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 5,
        "title": "部署 Serverless API",
        "level": "advanced",
        "category": "Backend",
        "slug": "serverless-api-deployment",
        "keywords": ["Serverless", "AWS Lambda", "API"],
        "description": "Serverless API 如夜市攞販的自動化廚房，無伺服器運行。",
        "prompt": "【功能應用】部署 Serverless API，提供程式碼完成：［請描述需求，如 '問候 API'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何降低延遲'）。",
        "requiredInfo": ["Lambda 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["簡單 API", "事件觸發", "雲端服務"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 6,
        "title": "實現 GraphQL 查詢",
        "level": "intermediate",
        "category": "API",
        "slug": "graphql-query",
        "keywords": ["GraphQL", "查詢", "數據"],
        "description": "GraphQL 查詢如夜市攞販的自選菜單，按需獲取數據。",
        "prompt": "【功能應用】使用 GraphQL 實現數據查詢，提供程式碼完成：［請描述需求，如 '查詢用戶資料'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何快取結果'）。",
        "requiredInfo": ["查詢結構", "目前程式碼", "期望結果"],
        "applicationScenarios": ["用戶查詢", "數據獲取", "API 優化"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 7,
        "title": "整合 TypeScript 至 React",
        "level": "intermediate",
        "category": "React",
        "slug": "typescript-react-integration",
        "keywords": ["TypeScript", "React", "類型"],
        "description": "TypeScript 如夜市攞販的品質保證，提升 React 穩定性。",
        "prompt": "【功能應用】將 TypeScript 整合至 React，提供程式碼完成：［請描述需求，如 '為計數器添加類型'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何處理類型錯誤'）。",
        "requiredInfo": ["TS 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["計數器類型", "穩定應用", "團隊開發"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 8,
        "title": "配置 Docker 容器化",
        "level": "advanced",
        "category": "DevOps",
        "slug": "docker-containerization",
        "keywords": ["Docker", "容器化", "部署"],
        "description": "Docker 如夜市攞販的標準化攤位，確保環境一致。",
        "prompt": "【功能應用】使用 Docker 容器化應用，提供程式碼完成：［請描述需求，如 '容器化 React 應用'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何映射端口'）。",
        "requiredInfo": ["Dockerfile", "目前程式碼", "期望結果"],
        "applicationScenarios": ["應用部署", "環境一致", "CI/CD 支援"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 9,
        "title": "實現微前端通信",
        "level": "advanced",
        "category": "Architecture",
        "slug": "micro-frontend-communication",
        "keywords": ["微前端", "通信", "模組化"],
        "description": "微前端通信如夜市攞販的對講機，實現模組間聯繫。",
        "prompt": "【功能應用】實現微前端模組通信，提供程式碼完成：［請描述需求，如 'React 與 Vue 狀態同步'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何處理跨框架'）。",
        "requiredInfo": ["微前端配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["模組同步", "跨框架整合", "大型應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 10,
        "title": "整合 ChatGPT 聊天",
        "level": "advanced",
        "category": "AI",
        "slug": "chatgpt-chat-integration",
        "keywords": ["ChatGPT", "聊天", "智能"],
        "description": "ChatGPT 整合如夜市攞販的智能助手，提供對話功能。",
        "prompt": "【功能應用】整合 ChatGPT 實現聊天功能，提供程式碼完成：［請描述需求，如 '即時問答框'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何加速回應'）。",
        "requiredInfo": ["API 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["問答系統", "客服聊天", "智能交互"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 11,
        "title": "配置 Tailwind CSS 主題",
        "level": "beginner",
        "category": "CSS",
        "slug": "tailwind-css-theme",
        "keywords": ["Tailwind CSS", "主題", "樣式"],
        "description": "Tailwind CSS 主題如夜市攞販的專屬裝飾，打造獨特風格。",
        "prompt": "【功能應用】使用 Tailwind CSS 配置主題，提供程式碼完成：［請描述需求，如 '設置暗色模式'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何切換主題'）。",
        "requiredInfo": ["Tailwind 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["暗色模式", "品牌風格", "樣式切換"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 12,
        "title": "配置 Redux Toolkit 狀態",
        "level": "intermediate",
        "category": "State Management",
        "slug": "redux-toolkit-state",
        "keywords": ["Redux Toolkit", "狀態", "React"],
        "description": "Redux Toolkit 如夜市攞販的統一訂單，管理全局狀態。",
        "prompt": "【功能應用】使用 Redux Toolkit 配置狀態管理，提供程式碼完成：［請描述需求，如 '同步購物車'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何減少渲染'）。",
        "requiredInfo": ["Redux 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["購物車同步", "全局狀態", "數據管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 13,
        "title": "優化 Next.js SSR",
        "level": "advanced",
        "category": "Frameworks",
        "slug": "nextjs-ssr-optimization",
        "keywords": ["Next.js", "SSR", "效能"],
        "description": "Next.js SSR 如夜市攞販的預熱烤箱，提升渲染速度。",
        "prompt": "【功能應用】優化 Next.js SSR 效能，提供程式碼完成：［請描述需求，如 '加速產品頁面'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何減少延遲'）。",
        "requiredInfo": ["Next.js 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["產品頁面", "SEO 優化", "動態渲染"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 14,
        "title": "實現 WebRTC 視訊",
        "level": "advanced",
        "category": "Communication",
        "slug": "webrtc-video",
        "keywords": ["WebRTC", "視訊", "即時"],
        "description": "WebRTC 如夜市攞販的即時喊話，實現視訊通話。",
        "prompt": "【功能應用】使用 WebRTC 實現視訊功能，提供程式碼完成：［請描述需求，如 '雙人視訊通話'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何確保穩定性'）。",
        "requiredInfo": ["WebRTC 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["視訊會議", "即時通話", "遠端協作"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 15,
        "title": "整合 Three.js 3D 動畫",
        "level": "advanced",
        "category": "Visualization",
        "slug": "threejs-3d-animation",
        "keywords": ["Three.js", "3D 動畫", "WebGL"],
        "description": "Three.js 如夜市攞販的 3D 立體招牌，打造視覺效果。",
        "prompt": "【功能應用】整合 Three.js 實現 3D 動畫，提供程式碼完成：［請描述需求，如 '旋轉立方體'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何提升幀率'）。",
        "requiredInfo": ["Three.js 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["產品展示", "遊戲場景", "3D 可視化"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 16,
        "title": "設置 PWA 離線功能",
        "level": "intermediate",
        "category": "Web Development",
        "slug": "pwa-offline",
        "keywords": ["PWA", "離線", "Service Worker"],
        "description": "PWA 離線功能如夜市攞販的備用電源，確保應用可用。",
        "prompt": "【功能應用】設置 PWA 離線功能，提供程式碼完成：［請描述需求，如 '離線顯示緩存頁面'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何更新緩存'）。",
        "requiredInfo": ["Service Worker 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["離線網頁", "行動應用", "體驗優化"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 17,
        "title": "撰寫 Jest 測試用例",
        "level": "intermediate",
        "category": "Testing",
        "slug": "jest-testing",
        "keywords": ["Jest", "測試", "單元測試"],
        "description": "Jest 測試如夜市攞販的質檢員，確保組件穩定。",
        "prompt": "【功能應用】使用 Jest 撰寫測試用例，提供程式碼完成：［請描述需求，如 '測試按鈕點擊'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何提升覆蓋率'）。",
        "requiredInfo": ["測試目標", "目前程式碼", "期望結果"],
        "applicationScenarios": ["組件測試", "功能驗證", "品質保證"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 18,
        "title": "實現 Cypress 表單測試",
        "level": "intermediate",
        "category": "Testing",
        "slug": "cypress-form-testing",
        "keywords": ["Cypress", "表單測試", "E2E"],
        "description": "Cypress 表單測試如夜市攞販的模擬顧客，測試流程。",
        "prompt": "【功能應用】使用 Cypress 測試表單，提供程式碼完成：［請描述需求，如 '測試登入表單'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何模擬提交'）。",
        "requiredInfo": ["表單程式碼", "目前測試腳本", "期望結果"],
        "applicationScenarios": ["表單驗證", "流程測試", "E2E 測試"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 19,
        "title": "配置 Web Workers 處理",
        "level": "advanced",
        "category": "Performance",
        "slug": "web-workers-processing",
        "keywords": ["Web Workers", "數據處理", "效能"],
        "description": "Web Workers 如夜市攞販的後台助手，提升處理效率。",
        "prompt": "【功能應用】配置 Web Workers 處理數據，提供程式碼完成：［請描述需求，如 '排序大型陣列'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何不阻塞主執行緒'）。",
        "requiredInfo": ["Worker 程式碼", "目前程式碼", "期望結果"],
        "applicationScenarios": ["數據處理", "背景任務", "效能優化"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 20,
        "title": "實現 Svelte 動態組件",
        "level": "intermediate",
        "category": "Frameworks",
        "slug": "svelte-dynamic-components",
        "keywords": ["Svelte", "動態組件", "響應式"],
        "description": "Svelte 動態組件如夜市攞販的靈活攤位，輕量交互。",
        "prompt": "【功能應用】使用 Svelte 實現動態組件，提供程式碼完成：［請描述需求，如 '計數器組件'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何提升效能'）。",
        "requiredInfo": ["Svelte 程式碼", "目前程式碼", "期望結果"],
        "applicationScenarios": ["計數器", "響應式 UI", "輕量應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 21,
        "title": "整合 React Native 通知",
        "level": "intermediate",
        "category": "Mobile",
        "slug": "react-native-notifications",
        "keywords": ["React Native", "通知", "移動"],
        "description": "React Native 通知如夜市攞販的廣播，提醒用戶。",
        "prompt": "【功能應用】整合 React Native 推送通知，提供程式碼完成：［請描述需求，如 '本地通知提醒'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何定時觸發'）。",
        "requiredInfo": ["通知配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["本地提醒", "推送消息", "應用通知"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 22,
        "title": "配置 Electron 檔案存取",
        "level": "advanced",
        "category": "Desktop",
        "slug": "electron-file-access",
        "keywords": ["Electron", "檔案存取", "桌面"],
        "description": "Electron 檔案存取如夜市攞販的檔案櫃，管理本地數據。",
        "prompt": "【功能應用】配置 Electron 檔案存取，提供程式碼完成：［請描述需求，如 '讀取文本檔案'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何處理大檔案'）。",
        "requiredInfo": ["Electron 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["檔案管理", "桌面工具", "本地存取"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 23,
        "title": "優化 Webpack 分包",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "webpack-splitting",
        "keywords": ["Webpack", "分包", "效能"],
        "description": "Webpack 分包如夜市攞販的打包分區，提升載入效率。",
        "prompt": "【功能應用】優化 Webpack 資源分包，提供程式碼完成：［請描述需求，如 '分離 React 與庫'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何減少首屏大小'）。",
        "requiredInfo": ["Webpack 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["大型應用", "首屏優化", "資源管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 24,
        "title": "設置 Babel Polyfill",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "babel-polyfill",
        "keywords": ["Babel", "Polyfill", "相容性"],
        "description": "Babel Polyfill 如夜市攞販的適配器，支援舊瀏覽器。",
        "prompt": "【功能應用】設置 Babel Polyfill 提升相容性，提供程式碼完成：［請描述需求，如 '支援 IE11 Promise'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何處理新功能'）。",
        "requiredInfo": ["Babel 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["舊瀏覽器支援", "ES6 相容性", "跨平台"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 25,
        "title": "配置 ESLint 與 Prettier",
        "level": "beginner",
        "category": "Tools",
        "slug": "eslint-prettier",
        "keywords": ["ESLint", "Prettier", "規範"],
        "description": "ESLint 與 Prettier 如夜市攞販的質檢員，確保程式碼規範。",
        "prompt": "【功能應用】配置 ESLint 與 Prettier，提供程式碼完成：［請描述需求，如 '規範 React 程式碼'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何統一格式'）。",
        "requiredInfo": ["配置檔案", "目前程式碼", "期望結果"],
        "applicationScenarios": ["程式碼規範", "團隊協作", "品質檢查"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 26,
        "title": "實現 Git 分支管理",
        "level": "intermediate",
        "category": "Tools",
        "slug": "git-branch-management",
        "keywords": ["Git", "分支", "版本控制"],
        "description": "Git 分支管理如夜市攞販的多線作業，協調版本。",
        "prompt": "【功能應用】實現 Git 分支管理，提供命令完成：［請描述需求，如 '設置功能分支'］。若有命令：［貼上命令］，我將優化或解答問題（如 '如何合併無衝突'）。",
        "requiredInfo": ["分支結構", "目前命令", "期望結果"],
        "applicationScenarios": ["功能開發", "團隊協作", "版本管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 27,
        "title": "配置 npm 腳本自動化",
        "level": "intermediate",
        "category": "Tools",
        "slug": "npm-script-automation",
        "keywords": ["npm", "腳本", "自動化"],
        "description": "npm 腳本如夜市攞販的自動化工具，提升效率。",
        "prompt": "【功能應用】配置 npm 腳本自動化，提供程式碼完成：［請描述需求，如 '構建與測試腳本'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何一鍵運行'）。",
        "requiredInfo": ["package.json", "目前腳本", "期望結果"],
        "applicationScenarios": ["構建流程", "測試自動化", "開發效率"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 28,
        "title": "優化 Yarn Workspace",
        "level": "intermediate",
        "category": "Tools",
        "slug": "yarn-workspace-optimization",
        "keywords": ["Yarn", "Workspace", "依賴"],
        "description": "Yarn Workspace 如夜市攞販的多攤管理，優化依賴。",
        "prompt": "【功能應用】優化 Yarn Workspace 依賴管理，提供程式碼完成：［請描述需求，如 '共享 React 依賴'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何減少重複'）。",
        "requiredInfo": ["Workspace 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["多項目管理", "依賴共享", "效能提升"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 29,
        "title": "實現 Rollup 模組輸出",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "rollup-module-output",
        "keywords": ["Rollup", "模組", "打包"],
        "description": "Rollup 如夜市攞販的輕便打包機，輸出高效模組。",
        "prompt": "【功能應用】使用 Rollup 實現模組輸出，提供程式碼完成：［請描述需求，如 '打包工具庫'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何支援多格式'）。",
        "requiredInfo": ["Rollup 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["工具庫", "模組輸出", "開源項目"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 30,
        "title": "整合 Vue.js 路由",
        "level": "intermediate",
        "category": "Frameworks",
        "slug": "vuejs-routing",
        "keywords": ["Vue.js", "路由", "導航"],
        "description": "Vue.js 路由如夜市攞販的導覽圖，實現頁面切換。",
        "prompt": "【功能應用】整合 Vue.js 實現路由，提供程式碼完成：［請描述需求，如 '產品頁面路由'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何傳遞參數'）。",
        "requiredInfo": ["Vue Router 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["多頁應用", "動態導航", "頁面切換"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 31,
        "title": "實現 D3.js 動態圖表",
        "level": "advanced",
        "category": "Visualization",
        "slug": "d3js-dynamic-charts",
        "keywords": ["D3.js", "圖表", "可視化"],
        "description": "D3.js 動態圖表如夜市攞販的數據看板，展示即時數據。",
        "prompt": "【功能應用】使用 D3.js 實現動態圖表，提供程式碼完成：［請描述需求，如 '即時柱狀圖'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何更新數據'）。",
        "requiredInfo": ["D3.js 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["數據展示", "動態報表", "可視化分析"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 32,
        "title": "配置 WebGPU 渲染",
        "level": "advanced",
        "category": "Performance",
        "slug": "webgpu-rendering",
        "keywords": ["WebGPU", "渲染", "圖形"],
        "description": "WebGPU 如夜市攞販的高效能烤爐，提升圖形渲染。",
        "prompt": "【功能應用】配置 WebGPU 實現渲染，提供程式碼完成：［請描述需求，如 '渲染三角形'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何提升幀率'）。",
        "requiredInfo": ["WebGPU 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["遊戲渲染", "3D 可視化", "圖形處理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 33,
        "title": "實現 Playwright 測試",
        "level": "advanced",
        "category": "Testing",
        "slug": "playwright-testing",
        "keywords": ["Playwright", "測試", "多瀏覽器"],
        "description": "Playwright 如夜市攞販的多功能試吃員，確保兼容性。",
        "prompt": "【功能應用】使用 Playwright 實現多瀏覽器測試，提供程式碼完成：［請描述需求，如 '測試 Chrome 登入'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何穩定測試'）。",
        "requiredInfo": ["測試腳本", "目前程式碼", "期望結果"],
        "applicationScenarios": ["跨瀏覽器測試", "E2E 驗證", "兼容性"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 34,
        "title": "整合 Zustand 狀態",
        "level": "intermediate",
        "category": "State Management",
        "slug": "zustand-state",
        "keywords": ["Zustand", "狀態", "輕量"],
        "description": "Zustand 如夜市攞販的輕便記帳本，簡單管理狀態。",
        "prompt": "【功能應用】整合 Zustand 實現狀態管理，提供程式碼完成：［請描述需求，如 '主題切換'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何保持輕量'）。",
        "requiredInfo": ["Zustand 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["主題管理", "輕量狀態", "簡單應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 35,
        "title": "實現 Recoil 狀態同步",
        "level": "intermediate",
        "category": "State Management",
        "slug": "recoil-state-sync",
        "keywords": ["Recoil", "狀態", "同步"],
        "description": "Recoil 如夜市攞販的精密倉庫，同步複雜狀態。",
        "prompt": "【功能應用】使用 Recoil 實現狀態同步，提供程式碼完成：［請描述需求，如 '用戶與訂單同步'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何高效同步'）。",
        "requiredInfo": ["Recoil 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["用戶訂單", "複雜狀態", "數據共享"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 36,
        "title": "配置 Socket.io 聊天",
        "level": "intermediate",
        "category": "Communication",
        "slug": "socketio-chat",
        "keywords": ["Socket.io", "聊天", "即時"],
        "description": "Socket.io 聊天如夜市攞販的喊話區，實現即時通訊。",
        "prompt": "【功能應用】配置 Socket.io 實現聊天功能，提供程式碼完成：［請描述需求，如 '多人聊天室'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何確保即時性'）。",
        "requiredInfo": ["Socket.io 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["聊天室", "即時通知", "社群互動"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 37,
        "title": "實現 Firebase 實時更新",
        "level": "intermediate",
        "category": "Backend",
        "slug": "firebase-realtime",
        "keywords": ["Firebase", "實時", "同步"],
        "description": "Firebase 實時更新如夜市攞販的即時訂單，保持數據新鮮。",
        "prompt": "【功能應用】使用 Firebase 實現實時更新，提供程式碼完成：［請描述需求，如 '待辦清單同步'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何處理斷線'）。",
        "requiredInfo": ["Firebase 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["待辦同步", "實時數據", "雲端更新"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 38,
        "title": "部署 AWS Amplify 應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "aws-amplify-deployment",
        "keywords": ["AWS Amplify", "全端", "部署"],
        "description": "AWS Amplify 如夜市攞販的全能工具箱，快速部署應用。",
        "prompt": "【功能應用】部署 AWS Amplify 全端應用，提供程式碼完成：［請描述需求，如 '帶認證的 React 應用'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何簡化流程'）。",
        "requiredInfo": ["Amplify 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["全端部署", "認證應用", "雲端服務"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 39,
        "title": "整合 Apollo Client",
        "level": "intermediate",
        "category": "API",
        "slug": "apollo-client-integration",
        "keywords": ["Apollo Client", "GraphQL", "查詢"],
        "description": "Apollo Client 如夜市攞販的快遞員，高效查詢數據。",
        "prompt": "【功能應用】整合 Apollo Client 實現 GraphQL 查詢，提供程式碼完成：［請描述需求，如 '查詢產品列表'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何快取查詢'）。",
        "requiredInfo": ["Apollo 配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["產品查詢", "數據獲取", "GraphQL 應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 40,
        "title": "實現 Styled-Components 主題",
        "level": "intermediate",
        "category": "CSS",
        "slug": "styled-components-theme",
        "keywords": ["Styled-Components", "主題", "CSS-in-JS"],
        "description": "Styled-Components 如夜市攞販的換裝秀，動態調整風格。",
        "prompt": "【功能應用】使用 Styled-Components 實現主題切換，提供程式碼完成：［請描述需求，如 '明暗模式切換'］。若有程式碼：［貼上程式碼］，我將優化或解答問題（如 '如何平滑切換'）。",
        "requiredInfo": ["主題配置", "目前程式碼", "期望結果"],
        "applicationScenarios": ["明暗模式", "動態樣式", "主題設計"],
        "lastUpdated": "2025-03-01"
      }
    ]
  },
  "integratedExample": {
    "overview": "提供 8 個綜合專案示例，串聯多項技術，展示完整開發流程，涵蓋進階應用場景。",
    "items": [
      {
        "number": 101,
        "title": "電商平台綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "ecommerce-integrated-app",
        "keywords": ["React", "Serverless", "GraphQL", "Docker"],
        "description": "打造電商平台，如夜市攞販的全功能商店，串聯前端與後端。",
        "prompt": "【功能應用】實現電商平台，提供程式碼完成：1. React 前端展示產品；2. GraphQL 查詢數據；3. Serverless (AWS Lambda) 部署 API；4. Docker 容器化應用。請依需求提供：［例如：綠色調 #28A745、含購物車］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "頁面含產品網格（綠色卡片）、右側購物車（浮動顯示總額）、GraphQL 數據即時更新，Docker 容器運行。",
        "applicationScenarios": ["電商網站", "全端部署", "技術整合"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 102,
        "title": "社交平台綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "social-integrated-app",
        "keywords": ["React", "WebSocket", "GraphQL", "Docker"],
        "description": "打造社交平台，如夜市攞販的熱鬧社群，實現即時互動。",
        "prompt": "【功能應用】實現社交平台，提供程式碼完成：1. React 前端展示動態；2. WebSocket 實現即時聊天；3. GraphQL 查詢用戶數據；4. Docker 容器化部署。請依需求提供：［例如：紫色調 #800080、含評論功能］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "頁面含動態列表（紫色卡片）、右側聊天框（即時更新）、底部評論區，Docker 容器運行。",
        "applicationScenarios": ["社交網站", "即時通訊", "技術整合"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 103,
        "title": "數據儀表板綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "dashboard-integrated-app",
        "keywords": ["React", "D3.js", "Firebase", "Docker"],
        "description": "打造數據儀表板，如夜市攞販的營收中控台，展示即時數據。",
        "prompt": "【功能應用】實現數據儀表板，提供程式碼完成：1. React 前端展示圖表；2. D3.js 繪製動態圖表；3. Firebase 實時數據同步；4. Docker 容器化部署。請依需求提供：［例如：藍綠調 #20B2AA、含折線圖］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "頁面含藍綠折線圖（左側）、柱狀圖（中間）、右側數據總覽（即時更新），Docker 容器運行。",
        "applicationScenarios": ["數據分析", "即時監控", "技術整合"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 104,
        "title": "部落格平台綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "blog-integrated-app",
        "keywords": ["Next.js", "SSR", "Docker", "ChatGPT"],
        "description": "打造部落格平台，如夜市攞販的線上日誌站，結合 SSR 與 AI 生成內容。",
        "prompt": "【功能應用】實現部落格平台，提供程式碼完成：1. Next.js 實現 SSR 部落格頁面；2. ChatGPT API 生成文章內容；3. Docker 容器化部署；4. 支援 SEO 與評論功能。請依需求提供：［例如：灰色調 #696969、含 AI 文章生成按鈕］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "頁面含灰色文章列表（SSR 渲染）、頂部 AI 生成按鈕（點擊生成新內容）、底部評論區，Docker 容器運行。",
        "applicationScenarios": ["部落格網站", "AI 內容創作", "SEO 優化部署"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 105,
        "title": "線上問答系統綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "qa-integrated-app",
        "keywords": ["React", "TypeScript", "Socket.io", "AWS Amplify"],
        "description": "打造問答系統，如夜市攞販的即時答疑站，提供實時互動與全端部署。",
        "prompt": "【功能應用】實現問答系統，提供程式碼完成：1. React 與 TypeScript 前端展示問題與回覆；2. Socket.io 支援即時問答；3. AWS Amplify 部署全端應用；4. 含用戶認證。請依需求提供：［例如：藍色調 #1E90FF、支援即時更新］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "頁面含藍色問題列表（左側）、中間即時回覆區（Socket.io 更新）、右側用戶登入框，AWS Amplify 部署。",
        "applicationScenarios": ["問答平台", "即時互動", "全端應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 106,
        "title": "任務管理工具綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "task-manager-integrated-app",
        "keywords": ["Vue.js", "Firebase", "Docker", "Drag-and-Drop"],
        "description": "打造任務管理工具，如夜市攞販的高效看板，實現協作與部署。",
        "prompt": "【功能應用】實現任務管理工具，提供程式碼完成：1. Vue.js 前端展示任務看板；2. Firebase 實時同步任務數據；3. Drag-and-Drop 支援任務拖拉；4. Docker 容器化部署。請依需求提供：［例如：橙色調 #FF8C00、含三欄看板］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "頁面含三欄看板（橙色卡片，可拖拉移動）、頂部即時同步狀態（Firebase 更新），Docker 容器運行。",
        "applicationScenarios": ["團隊協作", "任務管理", "實時同步部署"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 107,
        "title": "即時遊戲排行榜綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "game-leaderboard-integrated-app",
        "keywords": ["React", "WebSocket", "Redis", "Docker"],
        "description": "打造遊戲排行榜，如夜市攞販的競技看板，提供即時排名。",
        "prompt": "【功能應用】實現遊戲排行榜，提供程式碼完成：1. React 前端展示排行榜；2. WebSocket 實現即時排名更新；3. Redis 儲存與處理高頻數據；4. Docker 容器化部署。請依需求提供：［例如：紅色調 #FF4500、含即時刷新］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "頁面含紅色排行榜表格（頂部高亮前三名）、中間即時更新區（WebSocket 刷新）、底部玩家輸入框，Docker 容器運行。",
        "applicationScenarios": ["遊戲排名", "即時競技", "高頻數據處理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 108,
        "title": "智慧家居控制綜合應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "smart-home-integrated-app",
        "keywords": ["React Native", "AWS IoT", "TypeScript", "Serverless"],
        "description": "打造智慧家居控制，如夜市攞販的智能中控台，實現遠端管理。",
        "prompt": "【功能應用】實現智慧家居控制，提供程式碼完成：1. React Native 前端展示控制介面；2. AWS IoT 整合設備數據；3. TypeScript 確保類型安全；4. Serverless 部署後端。請依需求提供：［例如：藍綠調 #20B2AA、含燈光控制］。",
        "requiredInfo": ["前端程式碼", "後端配置", "期望結果"],
        "demoDescription": "移動應用含藍綠控制面板（燈光開關按鈕）、設備狀態顯示區（即時更新）、底部通知欄，Serverless 後端運行。",
        "applicationScenarios": ["智慧家居", "遠端控制", "移動應用整合"],
        "lastUpdated": "2025-03-01"
      }
    ]
  }
}
