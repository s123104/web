{
  "learning": {
    "overview": "為初學者與中級開發者提供從前端基礎到進階技術的完整學習路徑，幫助建立紮實技能。",
    "items": [
      {
        "number": 1,
        "title": "HTML 語意化標籤應用",
        "level": "beginner",
        "category": "HTML",
        "slug": "html-semantic-tags",
        "keywords": [
          "HTML",
          "語意化標籤",
          "SEO",
          "網頁結構",
          "<header>",
          "<article>"
        ],
        "description": "HTML 語意化標籤就像台北夜市攤位的招牌，讓網頁結構一目了然，還能提升 SEO。",
        "prompt": "【請以劇場/比喻風格回應】以『一個三段式個人部落格首頁（標題、導航、文章）』為例，介紹 HTML 常用語意化標籤（如 <header>、<nav>、<article>、<footer>）的用途與情境，提供具體程式碼範例。考題：'何時用 <section> 與 <article>？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 2,
        "title": "CSS Flexbox 佈局技巧",
        "level": "beginner",
        "category": "CSS",
        "slug": "css-flexbox-layout",
        "keywords": [
          "CSS",
          "Flexbox",
          "響應式",
          "佈局",
          "justify-content",
          "flex-direction"
        ],
        "description": "Flexbox 像台灣廟會的舞龍隊，元素隨意排列，佈局如流水般順暢。",
        "prompt": "【請以劇場/比喻風格回應】以『一個響應式導航欄（桌機橫排、手機直排）』為例，介紹 CSS Flexbox 基本概念與屬性（如 flex-direction、justify-content），提供具體程式碼範例。考題：'如何用 Flexbox 調整項目間距？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 3,
        "title": "CSS Grid 網格系統應用",
        "level": "beginner",
        "category": "CSS",
        "slug": "css-grid-system",
        "keywords": [
          "CSS",
          "Grid",
          "網格佈局",
          "grid-template",
          "響應式",
          "分區"
        ],
        "description": "CSS Grid 像規劃台北 101 的樓層，讓複雜佈局輕鬆分區。",
        "prompt": "【請以劇場/比喻風格回應】以『一個三欄新聞頁（頭條、側邊欄、廣告）』為例，解釋 CSS Grid 原理與屬性（如 grid-template-columns、grid-gap），提供具體程式碼範例。考題：'Grid 與 Flexbox 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 4,
        "title": "JavaScript 變數與資料型態",
        "level": "beginner",
        "category": "JavaScript",
        "slug": "js-variables-data-types",
        "keywords": ["JavaScript", "變數", "資料型態", "let", "const", "基礎"],
        "description": "JS 變數與資料型態如夜市小吃的原料，是程式邏輯的基石。",
        "prompt": "【請以劇場/比喻風格回應】以『一個用戶資料表單（姓名、年齡、是否訂閱）』為例，介紹 JS 資料型態（Number、String、Boolean、Null、Undefined）與變數（var、let、const），提供具體程式碼。考題：'let 與 const 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 5,
        "title": "JavaScript 控制流程與迴圈",
        "level": "beginner",
        "category": "JavaScript",
        "slug": "js-control-flow-loops",
        "keywords": [
          "JavaScript",
          "控制流程",
          "迴圈",
          "if/else",
          "for",
          "while"
        ],
        "description": "控制流程與迴圈如炒菜的步驟，讓程式邏輯有條不紊。",
        "prompt": "【請以劇場/比喻風格回應】以『一個簡單計數器（點擊增加至 10）』為例，介紹 if/else、switch、for、while 用法，提供具體程式碼。考題：'何時用 while 更適合？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 6,
        "title": "JavaScript 函式與作用域",
        "level": "intermediate",
        "category": "JavaScript",
        "slug": "js-functions-scope",
        "keywords": [
          "JavaScript",
          "函式",
          "作用域",
          "閉包",
          "箭頭函式",
          "模組化"
        ],
        "description": "函式與作用域如夜市老闆的獨門烹飪技巧，讓程式更有模組化。",
        "prompt": "【請以劇場/比喻風格回應】以『一個計時器（每秒更新數字）』為例，解釋函式定義（含箭頭函式）、作用域與閉包，提供具體程式碼。考題：'什麼是閉包及其應用？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 7,
        "title": "JavaScript 非同步程式設計",
        "level": "intermediate",
        "category": "JavaScript",
        "slug": "js-async-programming",
        "keywords": [
          "JavaScript",
          "非同步",
          "Promise",
          "async/await",
          "回呼",
          "API"
        ],
        "description": "非同步如夜市排隊叫號，協調步驟提升效率。",
        "prompt": "【請以劇場/比喻風格回應】以『從 API 獲取天氣資料』為例，介紹回呼、Promise、async/await，提供具體程式碼。考題：'async/await 如何解決回呼地獄？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 8,
        "title": "JavaScript 錯誤處理",
        "level": "intermediate",
        "category": "JavaScript",
        "slug": "js-error-handling",
        "keywords": [
          "JavaScript",
          "錯誤處理",
          "try/catch",
          "finally",
          "穩定性"
        ],
        "description": "錯誤處理如夜市攤販的備用食材，確保程式穩定運行。",
        "prompt": "【請以劇場/比喻風格回應】以『上傳用戶頭像檔案』為例，介紹 try/catch/finally，提供具體程式碼。考題：'如何根據錯誤類型處理？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 9,
        "title": "JavaScript DOM 操作",
        "level": "beginner",
        "category": "JavaScript",
        "slug": "js-dom-manipulation",
        "keywords": ["JavaScript", "DOM", "操作", "新增", "修改", "動態"],
        "description": "DOM 操作如夜市攤位即時調整菜單，讓網頁動態變化。",
        "prompt": "【請以劇場/比喻風格回應】以『一個待辦清單（新增與刪除項目）』為例，展示 DOM 操作（新增、修改、刪除），提供具體程式碼。考題：'如何平衡效能與易讀性？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 10,
        "title": "JavaScript 事件監聽與委派",
        "level": "intermediate",
        "category": "JavaScript",
        "slug": "js-event-listening-delegation",
        "keywords": [
          "JavaScript",
          "事件監聽",
          "委派",
          "addEventListener",
          "互動"
        ],
        "description": "事件監聽與委派如夜市叫賣的服務流程，讓互動更靈活。",
        "prompt": "【請以劇場/比喻風格回應】以『一個動態按鈕列表（點擊顯示訊息）』為例，解釋 addEventListener 與事件委派，提供具體程式碼。考題：'事件委派應用場景？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 11,
        "title": "Git 版本控制基礎",
        "level": "beginner",
        "category": "Tools",
        "slug": "git-version-control-basics",
        "keywords": ["Git", "版本控制", "commit", "branch", "merge", "協作"],
        "description": "Git 如記錄夜市攤位進貨的日誌，讓版本管理得心應手。",
        "prompt": "【請以劇場/比喻風格回應】以『一個部落格專案（主分支與特性分支）』為例，介紹 Git 操作（init、commit、branch、merge、push），提供具體範例。考題：'如何解決版本衝突？' 若有疑問請貼上［命令或程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 12,
        "title": "npm 與 Yarn 套件管理",
        "level": "beginner",
        "category": "Tools",
        "slug": "npm-yarn-package-management",
        "keywords": ["npm", "Yarn", "套件管理", "依賴", "腳本", "前端工具"],
        "description": "npm 與 Yarn 如管理夜市食材庫的管家，輕鬆安裝套件。",
        "prompt": "【請以劇場/比喻風格回應】以『一個 React 專案（安裝 React Router）』為例，介紹 npm/Yarn 安裝與管理套件，提供具體命令範例。考題：'npm 與 Yarn 效能差異？' 若有疑問請貼上［命令或程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 13,
        "title": "Webpack 打包基礎",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "webpack-bundling-basics",
        "keywords": ["Webpack", "打包", "模組化", "資源管理", "配置"],
        "description": "Webpack 如打包夜市便當的大廚，實現資源模組化。",
        "prompt": "【請以劇場/比喻風格回應】以『一個簡單 React 專案（含 CSS 與圖片）』為例，解釋 Webpack 原理與配置，提供具體 webpack.config.js 範例。考題：'如何優化打包速度？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 14,
        "title": "Babel 轉譯 ES6+",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "babel-es6-transpilation",
        "keywords": ["Babel", "轉譯", "ES6", "箭頭函式", "相容性"],
        "description": "Babel 如將國際名菜翻譯成台式口味，適配各瀏覽器。",
        "prompt": "【請以劇場/比喻風格回應】以『一個箭頭函式計數器』為例，介紹 Babel 作用與配置，提供具體程式碼。考題：'轉譯前後差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 15,
        "title": "ESLint 程式碼風格檢查",
        "level": "intermediate",
        "category": "Tools",
        "slug": "eslint-code-style",
        "keywords": ["ESLint", "程式碼風格", "規範", "靜態分析", "品質"],
        "description": "ESLint 如夜市攤位的衛生檢查員，確保程式碼品質過關。",
        "prompt": "【請以劇場/比喻風格回應】以『一個 React 計數器組件』為例，說明 ESLint 設定與檢查，提供具體 .eslintrc 範例。考題：'如何自訂 ESLint 規則？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 16,
        "title": "React 環境搭建",
        "level": "beginner",
        "category": "React",
        "slug": "react-environment-setup",
        "keywords": [
          "React",
          "環境搭建",
          "Create React App",
          "前端框架",
          "入門"
        ],
        "description": "學習 React 如同準備夜市攤位的食材，從環境開始。",
        "prompt": "【請以劇場/比喻風格回應】以『使用 Create React App 搭建簡單問候頁』為例，解釋 React 核心概念與優點，提供具體建立步驟與程式碼。考題：'目錄結構含義？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 17,
        "title": "TypeScript 與 React 整合",
        "level": "intermediate",
        "category": "React",
        "slug": "typescript-react-integration",
        "keywords": ["TypeScript", "React", "類型安全", "靜態檢查", "穩定性"],
        "description": "TypeScript 如 React 的盔甲，讓應用更穩固。",
        "prompt": "【請以劇場/比喻風格回應】以『一個計數器組件（含 props 與 state）』為例，介紹 TypeScript 在 React 中的應用，提供具體程式碼。考題：'TypeScript 如何提升 React 開發？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 18,
        "title": "React Props 與 State",
        "level": "beginner",
        "category": "React",
        "slug": "react-props-state",
        "keywords": ["React", "Props", "State", "組件", "數據流"],
        "description": "Props 與 State 如夜市食材與調味，讓元件活起來。",
        "prompt": "【請以劇場/比喻風格回應】以『一個用戶卡片（顯示姓名與點擊計數）』為例，說明 Props 與 State 概念，提供具體程式碼。考題：'何時用 State 更合適？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 19,
        "title": "React 事件處理",
        "level": "beginner",
        "category": "React",
        "slug": "react-event-handling",
        "keywords": ["React", "事件處理", "onClick", "onChange", "互動"],
        "description": "事件處理如夜市攤販的即時應對，增強互動性。",
        "prompt": "【請以劇場/比喻風格回應】以『一個表單提交（輸入姓名並顯示）』為例，展示 React 事件處理（onClick、onChange），提供具體程式碼。考題：'如何避免事件錯誤？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 20,
        "title": "React 樣式設計",
        "level": "intermediate",
        "category": "React",
        "slug": "react-styling",
        "keywords": [
          "React",
          "樣式",
          "CSS 模組",
          "styled-components",
          "內聯樣式"
        ],
        "description": "樣式設計如為夜市攤位上色，讓介面美觀實用。",
        "prompt": "【請以劇場/比喻風格回應】以『一個按鈕組件（含懸停效果）』為例，比較內聯樣式、CSS 模組與 styled-components，提供具體程式碼。考題：'何時用 CSS 模組？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 21,
        "title": "React useState 與 useEffect",
        "level": "intermediate",
        "category": "React",
        "slug": "react-usestate-useeffect",
        "keywords": ["React", "useState", "useEffect", "狀態", "副作用"],
        "description": "useState 與 useEffect 如夜市攤位的調味與火候，動態更新元件。",
        "prompt": "【請以劇場/比喻風格回應】以『一個 API 計數器（點擊獲取資料）』為例，說明 useState 與 useEffect 原理，提供具體程式碼。考題：'如何設定 useEffect 依賴？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 22,
        "title": "React 自訂 Hook",
        "level": "intermediate",
        "category": "React",
        "slug": "react-custom-hooks",
        "keywords": ["React", "自訂 Hook", "usePrevious", "重用性", "邏輯"],
        "description": "自訂 Hook 如夜市攤販的獨門醬料，提升程式碼重用性。",
        "prompt": "【請以劇場/比喻風格回應】以『一個狀態追蹤器（記錄前次計數）』為例，示範創建 usePrevious Hook，提供具體程式碼。考題：'usePrevious 應用場景？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 23,
        "title": "React useDebounce Hook",
        "level": "intermediate",
        "category": "React",
        "slug": "react-usedebounce-hook",
        "keywords": ["React", "useDebounce", "防抖", "輸入優化", "效能"],
        "description": "防抖如夜市攤販等待客人確認訂單，提升輸入效能。",
        "prompt": "【請以劇場/比喻風格回應】以『一個搜尋框（延遲 500ms 觸發）』為例，介紹 useDebounce Hook 實作，提供具體程式碼。考題：'防抖在輸入中應用？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 24,
        "title": "React useThrottle Hook",
        "level": "intermediate",
        "category": "React",
        "slug": "react-usethrottle-hook",
        "keywords": ["React", "useThrottle", "節流", "滾動", "穩定性"],
        "description": "節流如夜市攤販控制叫賣頻率，提升穩定性。",
        "prompt": "【請以劇場/比喻風格回應】以『一個滾動監聽器（每 200ms 更新位置）』為例，展示 useThrottle Hook，提供具體程式碼。考題：'節流與防抖差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 25,
        "title": "React.memo 效能優化",
        "level": "intermediate",
        "category": "React",
        "slug": "react-memo-optimization",
        "keywords": ["React", "React.memo", "效能", "記憶化", "渲染"],
        "description": "React.memo 如夜市攤販的菜單快取，避免重複烹調。",
        "prompt": "【請以劇場/比喻風格回應】以『一個靜態列表項（避免重複渲染）』為例，展示 React.memo 優化，提供具體程式碼。考題：'React.memo 原理？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 26,
        "title": "React useMemo 計算優化",
        "level": "intermediate",
        "category": "React",
        "slug": "react-usememo-optimization",
        "keywords": ["React", "useMemo", "計算優化", "快取", "效能"],
        "description": "useMemo 如夜市攤販的預製食材，節省計算時間。",
        "prompt": "【請以劇場/比喻風格回應】以『一個價格計算器（含稅計算）』為例，展示 useMemo 快取運算，提供具體程式碼。考題：'如何判斷快取需求？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 27,
        "title": "React useCallback 函數優化",
        "level": "intermediate",
        "category": "React",
        "slug": "react-usecallback-optimization",
        "keywords": ["React", "useCallback", "函數優化", "快取", "效能"],
        "description": "useCallback 如夜市攤販保存獨門配方，避免重複製作。",
        "prompt": "【請以劇場/比喻風格回應】以『一個回調傳遞按鈕（子組件點擊）』為例，展示 useCallback 優化，提供具體程式碼。考題：'何時用 useCallback？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 28,
        "title": "React Lazy Loading",
        "level": "advanced",
        "category": "React",
        "slug": "react-lazy-loading",
        "keywords": ["React", "Lazy Loading", "React.lazy", "Suspense", "效能"],
        "description": "Lazy Loading 如夜市攤販按需上菜，提升載入速度。",
        "prompt": "【請以劇場/比喻風格回應】以『一個圖片庫（延遲載入圖片）』為例，介紹 React.lazy 與 Suspense，提供具體程式碼。考題：'懶加載影響初次載入？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 29,
        "title": "React Error Boundary",
        "level": "advanced",
        "category": "React",
        "slug": "react-error-boundary",
        "keywords": ["React", "Error Boundary", "錯誤處理", "穩定性", "組件"],
        "description": "Error Boundary 如夜市攤販的安全網，保護應用不崩潰。",
        "prompt": "【請以劇場/比喻風格回應】以『一個崩潰計數器（異常時顯示備用 UI）』為例，介紹 Error Boundary 實作，提供具體程式碼。考題：'最佳應用場景？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 30,
        "title": "Vite 構建 React 專案",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "vite-react-build",
        "keywords": ["Vite", "React", "構建", "熱重載", "快速開發"],
        "description": "Vite 如高鐵列車，加速 React 專案開發流程。",
        "prompt": "【請以劇場/比喻風格回應】以『一個簡單 Todo 應用』為例，介紹 Vite 構建 React 專案，相較 CRA 的優勢，提供具體配置範例。考題：'Vite 如何提升效率？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 31,
        "title": "Astro 與 React 整合",
        "level": "advanced",
        "category": "Frameworks",
        "slug": "astro-react-integration",
        "keywords": ["Astro", "React", "靜態網站", "SSR", "性能"],
        "description": "Astro 如拼裝夜市攤位，生成高效靜態網站。",
        "prompt": "【請以劇場/比喻風格回應】以『一個靜態部落格（含 React 互動組件）』為例，介紹 Astro 與 React 整合，提供具體程式碼。考題：'Astro 如何提升性能？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 32,
        "title": "WebAssembly 基礎",
        "level": "advanced",
        "category": "Performance",
        "slug": "webassembly-basics",
        "keywords": ["WebAssembly", "WASM", "高性能", "Rust", "JS 整合"],
        "description": "WebAssembly 如火箭引擎，提升應用性能。",
        "prompt": "【請以劇場/比喻風格回應】以『一個簡單計算器（Rust 實現加法）』為例，介紹 WebAssembly 與 JS 整合，提供具體程式碼。考題：'WebAssembly 如何提升速度？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 33,
        "title": "React Router 動態路由",
        "level": "intermediate",
        "category": "React",
        "slug": "react-router-dynamic-routing",
        "keywords": ["React Router", "動態路由", "v6", "導航", "參數"],
        "description": "React Router 如夜市巷弄的導覽圖，讓頁面靈活切換。",
        "prompt": "【請以劇場/比喻風格回應】以『一個用戶檔案頁（含 ID 參數）』為例，介紹 React Router v6 動態路由，提供具體程式碼。考題：'如何處理路由參數？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 34,
        "title": "Next.js 伺服器端渲染",
        "level": "advanced",
        "category": "Frameworks",
        "slug": "nextjs-server-side-rendering",
        "keywords": ["Next.js", "SSR", "伺服器端渲染", "SEO", "性能"],
        "description": "Next.js SSR 如夜市攤販的預熱烤箱，提升 SEO。",
        "prompt": "【請以劇場/比喻風格回應】以『一個產品頁（從 API 獲取資料）』為例，介紹 Next.js SSR，提供具體程式碼。考題：'SSR 如何改善 SEO？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 35,
        "title": "Gatsby 靜態網站生成",
        "level": "advanced",
        "category": "Frameworks",
        "slug": "gatsby-static-site-generation",
        "keywords": ["Gatsby", "靜態網站", "生成", "性能", "SEO"],
        "description": "Gatsby 如夜市預製便當，加速網站載入。",
        "prompt": "【請以劇場/比喻風格回應】以『一個個人作品集（含圖片與文章）』為例，介紹 Gatsby 靜態生成，提供具體程式碼。考題：'靜態生成與動態渲染差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 36,
        "title": "React Context 全局管理",
        "level": "intermediate",
        "category": "React",
        "slug": "react-context-global-management",
        "keywords": ["React", "Context", "全局狀態", "佈局", "管理"],
        "description": "Context 如夜市攤位的統一風格，管理全局狀態。",
        "prompt": "【請以劇場/比喻風格回應】以『一個主題切換器（明暗模式）』為例，展示 Context 管理佈局，提供具體程式碼。考題：'Context 最佳場景？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 37,
        "title": "React Hook Form 表單",
        "level": "intermediate",
        "category": "React",
        "slug": "react-hook-form",
        "keywords": ["React", "Hook Form", "表單", "輸入", "驗證"],
        "description": "React Hook Form 如夜市攤販的自動點單機，簡化表單處理。",
        "prompt": "【請以劇場/比喻風格回應】以『一個註冊表單（含姓名與密碼驗證）』為例，介紹 React Hook Form，提供具體程式碼。考題：'與其他表單庫優勢？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 38,
        "title": "React Query 資料請求",
        "level": "intermediate",
        "category": "React",
        "slug": "react-query-data-fetching",
        "keywords": ["React Query", "資料請求", "快取", "API", "同步"],
        "description": "React Query 如夜市攤販的自動補貨系統，保持數據新鮮。",
        "prompt": "【請以劇場/比喻風格回應】以『一個天氣資料展示（從 API 獲取）』為例，介紹 React Query 請求與快取，提供具體程式碼。考題：'如何改善同步？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 39,
        "title": "SWR 快速資料請求",
        "level": "intermediate",
        "category": "React",
        "slug": "swr-data-fetching",
        "keywords": ["SWR", "資料請求", "快取", "API", "自動更新"],
        "description": "SWR 如夜市攤販的快遞服務，快速傳遞資訊。",
        "prompt": "【請以劇場/比喻風格回應】以『一個用戶列表（自動更新）』為例，介紹 SWR 概念與用法，提供具體程式碼。考題：'SWR 如何自動更新？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 40,
        "title": "Jest 單元測試",
        "level": "intermediate",
        "category": "Testing",
        "slug": "jest-unit-testing",
        "keywords": ["Jest", "單元測試", "React", "測試", "品質"],
        "description": "Jest 如夜市攤販的質檢員，確保元件合格。",
        "prompt": "【請以劇場/比喻風格回應】以『一個按鈕組件（點擊觸發）』為例，展示 Jest 測試 React 元件，提供具體程式碼。考題：'如何進行快照測試？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 41,
        "title": "Cypress 端到端測試",
        "level": "advanced",
        "category": "Testing",
        "slug": "cypress-end-to-end-testing",
        "keywords": ["Cypress", "端到端測試", "E2E", "自動化", "流程"],
        "description": "Cypress 如夜市攤販模擬顧客點餐，確保系統無誤。",
        "prompt": "【請以劇場/比喻風格回應】以『一個登入流程（輸入與提交）』為例，展示 Cypress 測試 React 應用，提供具體程式碼。考題：'如何模擬用戶操作？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 42,
        "title": "React Native 入門",
        "level": "intermediate",
        "category": "Mobile",
        "slug": "react-native-basics",
        "keywords": ["React Native", "移動應用", "跨平台", "原生", "入門"],
        "description": "React Native 如夜市行動餐車，打造移動應用。",
        "prompt": "【請以劇場/比喻風格回應】以『一個簡單計數器（含按鈕）』為例，介紹 React Native 基礎，提供具體程式碼。考題：'與網頁 React 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 43,
        "title": "Serverless 基礎",
        "level": "advanced",
        "category": "Backend",
        "slug": "serverless-basics",
        "keywords": ["Serverless", "AWS Lambda", "雲端", "無伺服器", "後端"],
        "description": "Serverless 如夜市自動化廚房，無需管理伺服器。",
        "prompt": "【請以劇場/比喻風格回應】以『一個 API 端點（返回問候訊息）』為例，介紹 Serverless（AWS Lambda），提供具體程式碼。考題：'優勢與挑戰？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 44,
        "title": "Docker 容器化基礎",
        "level": "advanced",
        "category": "DevOps",
        "slug": "docker-containerization-basics",
        "keywords": ["Docker", "容器化", "部署", "環境一致性", "DevOps"],
        "description": "Docker 如夜市攤販的標準化廚具，讓部署穩定。",
        "prompt": "【請以劇場/比喻風格回應】以『一個 React 應用（含 Nginx 服務）』為例，介紹 Docker 打包，提供具體 Dockerfile 範例。考題：'Docker 如何提升部署？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 45,
        "title": "微前端架構入門",
        "level": "advanced",
        "category": "Architecture",
        "slug": "micro-frontend-basics",
        "keywords": ["微前端", "模組化", "架構", "React", "獨立部署"],
        "description": "微前端如夜市攤位的模組化拼盤，提升應用靈活性。",
        "prompt": "【請以劇場/比喻風格回應】以『一個儀表板（含獨立模組）』為例，介紹微前端概念與 React 整合，提供具體程式碼。考題：'微前端優勢？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 46,
        "title": "GraphQL 基礎",
        "level": "intermediate",
        "category": "API",
        "slug": "graphql-basics",
        "keywords": ["GraphQL", "查詢", "API", "資料", "前端後端"],
        "description": "GraphQL 如夜市攤販的自選菜單，按需索取資料。",
        "prompt": "【請以劇場/比喻風格回應】以『一個用戶資料查詢（姓名與年齡）』為例，介紹 GraphQL 查詢，提供具體程式碼。考題：'與 REST 差異？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 47,
        "title": "Tailwind CSS 響應式設計",
        "level": "intermediate",
        "category": "CSS",
        "slug": "tailwind-css-responsive-design",
        "keywords": ["Tailwind CSS", "響應式", "工具類", "設計", "佈局"],
        "description": "Tailwind 如夜市攤販的萬用工具，快速打造介面。",
        "prompt": "【請以劇場/比喻風格回應】以『一個產品卡片（桌機與手機適配）』為例，展示 Tailwind 設計響應式佈局，提供具體程式碼。考題：'如何自訂 Tailwind？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 48,
        "title": "Framer Motion 動畫基礎",
        "level": "intermediate",
        "category": "Animation",
        "slug": "framer-motion-basics",
        "keywords": ["Framer Motion", "動畫", "React", "視覺效果", "互動"],
        "description": "Framer Motion 如夜市燈光的視覺盛宴，吸引目光。",
        "prompt": "【請以劇場/比喻風格回應】以『一個卡片翻轉效果（點擊翻面）』為例，展示 Framer Motion 動畫，提供具體程式碼。考題：'如何調整動畫參數？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 49,
        "title": "React Spring 物理動畫",
        "level": "advanced",
        "category": "Animation",
        "slug": "react-spring-physics-animation",
        "keywords": ["React Spring", "物理動畫", "彈簧", "動態效果", "React"],
        "description": "React Spring 如夜市氣球的水流動畫，增添自然活力。",
        "prompt": "【請以劇場/比喻風格回應】以『一個彈簧移動按鈕（點擊彈跳）』為例，介紹 React Spring 動畫，提供具體程式碼。考題：'如何模擬物理運動？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 50,
        "title": "AI 整合 React 基礎",
        "level": "advanced",
        "category": "AI",
        "slug": "ai-react-integration",
        "keywords": ["AI", "React", "ChatGPT", "整合", "智能互動"],
        "description": "AI 整合如夜市攤販的智能助手，提升應用互動性。",
        "prompt": "【請以劇場/比喻風格回應】以『一個聊天框（與 ChatGPT 互動）』為例，介紹 React 與 ChatGPT API 整合，提供具體程式碼。考題：'AI 如何提升 UX？' 若有疑問請貼上［程式碼］，我將協助解答。",
        "lastUpdated": "2025-03-01"
      }
    ]
  },
  "practicalApplication": {
    "overview": "提供 50 個真實的前端應用場景，幫助開發者將技術應用於實際專案，涵蓋商業與個人需求。",
    "items": [
      {
        "number": 1,
        "title": "企業官網開發",
        "level": "intermediate",
        "category": "Web Development",
        "slug": "corporate-website-development",
        "keywords": ["React", "Tailwind CSS", "企業官網", "響應式", "品牌形象"],
        "description": "打造企業官網，如台北街頭的品牌櫥窗，展示專業形象。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Tailwind CSS，依據條例生成企業官網程式碼：1. 頁面結構（首頁、關於、服務、聯絡）；2. 配色與字體；3. 互動效果（滑動、懸停）。貼上需求：［條例描述，例如：藍色調 #007BFF、字體 Roboto］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 2,
        "title": "電子商務平台前端",
        "level": "advanced",
        "category": "E-commerce",
        "slug": "ecommerce-platform-frontend",
        "keywords": ["React", "Redux", "電商", "購物車", "前端設計"],
        "description": "打造電商平台前端，如高雄夜市的無障礙購物街。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Redux，依據條例生成電商前端程式碼：1. 產品展示；2. 購物車；3. 結帳與評價。貼上需求：［條例描述，例如：產品卡片含圖片與價格、綠色主題 #28A745］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 3,
        "title": "線上教育平台",
        "level": "advanced",
        "category": "Education",
        "slug": "online-education-platform",
        "keywords": ["React", "React Query", "教育平台", "影片", "測驗"],
        "description": "打造教育平台，如台南老屋改建的數位教室。",
        "prompt": "【零代碼提示 🚀】使用 React 和 React Query，依據條例生成教育平台程式碼：1. 影片與課程；2. 測驗與評分；3. 討論區。貼上需求：［條例描述，例如：影片嵌入 YouTube、藍灰配色 #4682B4］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 4,
        "title": "社交媒體平台",
        "level": "advanced",
        "category": "Social Media",
        "slug": "social-media-platform",
        "keywords": ["React", "WebSocket", "社交媒體", "即時消息", "互動"],
        "description": "打造社交平台，如台中花博的熱鬧社群。",
        "prompt": "【零代碼提示 🚀】使用 React 和 WebSocket，依據條例生成社交平台程式碼：1. 動態消息；2. 好友追蹤；3. 評論互動。貼上需求：［條例描述，例如：紫色主題 #800080、支援即時聊天］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 5,
        "title": "任務管理工具",
        "level": "intermediate",
        "category": "Productivity",
        "slug": "task-management-tool",
        "keywords": ["React", "Drag-and-Drop", "任務管理", "Trello", "同步"],
        "description": "打造任務管理工具，如台北捷運站的數位看板。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Drag-and-Drop 庫（如 react-beautiful-dnd），依據條例生成任務管理程式碼：1. 拖拉排序；2. 任務分組；3. 即時同步。貼上需求：［條例描述，例如：三欄設計、橙色調 #FFA500］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 6,
        "title": "預約與票務系統",
        "level": "intermediate",
        "category": "Booking",
        "slug": "booking-ticketing-system",
        "keywords": ["React", "React Hook Form", "票務", "預約", "支付"],
        "description": "打造票務平台，如夜市電影院的線上訂票系統。",
        "prompt": "【零代碼提示 🚀】使用 React 和 React Hook Form，依據條例生成票務系統程式碼：1. 座位選擇；2. 訂單管理；3. 支付整合。貼上需求：［條例描述，例如：紅色調 #FF4500、支援信用卡支付］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 7,
        "title": "企業內部 CRM",
        "level": "advanced",
        "category": "Business",
        "slug": "internal-crm",
        "keywords": ["React", "Redux", "CRM", "資料管理", "報表"],
        "description": "打造 CRM，如夜市攤販的智慧客戶管理大腦。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Redux，依據條例生成 CRM 程式碼：1. 資料管理；2. 聯絡記錄；3. 報表分析。貼上需求：［條例描述，例如：藍色調 #1E90FF、含圖表展示］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 8,
        "title": "在線客服系統",
        "level": "intermediate",
        "category": "Customer Support",
        "slug": "online-customer-service",
        "keywords": ["React", "Socket.io", "客服", "聊天", "工單"],
        "description": "打造客服平台，如 24 小時不打烊的夜市服務中心。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Socket.io，依據條例生成客服系統程式碼：1. 聊天介面；2. 自動回覆與工單。貼上需求：［條例描述，例如：綠色調 #32CD32、支援即時聊天］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 9,
        "title": "即時通訊應用",
        "level": "advanced",
        "category": "Communication",
        "slug": "real-time-messaging-app",
        "keywords": ["React", "WebSocket", "通訊", "即時", "檔案分享"],
        "description": "打造通訊應用，如夜市攤販間的即時喊話系統。",
        "prompt": "【零代碼提示 🚀】使用 React 和 WebSocket，依據條例生成通訊應用程式碼：1. 訊息介面；2. 傳輸與同步；3. 檔案分享。貼上需求：［條例描述，例如：灰藍調 #708090、支援圖片上傳］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 10,
        "title": "線上論壇系統",
        "level": "intermediate",
        "category": "Community",
        "slug": "online-forum-system",
        "keywords": ["React", "Firebase", "論壇", "討論", "分類"],
        "description": "打造論壇平台，如夜市美食街的網路聊天室。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成論壇系統程式碼：1. 分區與分類；2. 主題發布；3. 回覆互動。貼上需求：［條例描述，例如：橙色調 #FF8C00、支援即時更新］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 11,
        "title": "旅遊景點平台",
        "level": "intermediate",
        "category": "Travel",
        "slug": "tourism-platform",
        "keywords": ["React", "Google Maps", "旅遊", "評論", "規劃"],
        "description": "打造旅遊網站，如台灣夜市的美食地圖。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Google Maps API，依據條例生成旅遊平台程式碼：1. 景點展示；2. 用戶評論；3. 行程規劃。貼上需求：［條例描述，例如：綠色調 #228B22、含地圖功能］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 12,
        "title": "多語系網站",
        "level": "intermediate",
        "category": "Web Development",
        "slug": "multilingual-website",
        "keywords": ["React", "i18next", "多語系", "國際化", "UI"],
        "description": "打造多語言網站，如夜市攤位的多國菜單。",
        "prompt": "【零代碼提示 🚀】使用 React 和 i18next，依據條例生成多語系網站程式碼：1. 語言切換；2. 資源管理；3. UI 調整。貼上需求：［條例描述，例如：支援中文與英文、藍色調 #4169E1］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 13,
        "title": "響應式企業網站",
        "level": "intermediate",
        "category": "Web Development",
        "slug": "responsive-corporate-website",
        "keywords": ["React", "Tailwind CSS", "響應式", "企業", "品牌"],
        "description": "打造響應式網站，如夜市攤位的數位名片。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Tailwind CSS，依據條例生成響應式網站程式碼：1. 桌面與行動介面；2. 自適應解析度；3. 品牌風格。貼上需求：［條例描述，例如：紫色調 #9932CC、含聯絡表單］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 14,
        "title": "數據可視化儀表板",
        "level": "advanced",
        "category": "Data Visualization",
        "slug": "data-visualization-dashboard",
        "keywords": ["React", "D3.js", "數據可視化", "儀表板", "報表"],
        "description": "打造儀表板，如夜市攤販的營收控制台。",
        "prompt": "【零代碼提示 🚀】使用 React 和 D3.js，依據條例生成儀表板程式碼：1. 數據更新；2. 圖表展示；3. 報表生成。貼上需求：［條例描述，例如：藍綠調 #20B2AA、含折線圖］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 15,
        "title": "部落格後台管理",
        "level": "intermediate",
        "category": "Content Management",
        "slug": "blog-admin-system",
        "keywords": ["React", "Firebase", "部落格", "後台", "管理"],
        "description": "打造後台系統，如夜市攤販的高效後廚。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成後台程式碼：1. 文章管理；2. 用戶管理；3. 評論審核。貼上需求：［條例描述，例如：灰色調 #696969、含即時儲存］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 16,
        "title": "在線投票平台",
        "level": "intermediate",
        "category": "Survey",
        "slug": "online-voting-platform",
        "keywords": ["React", "Chart.js", "投票", "統計", "互動"],
        "description": "打造投票平台，如夜市攤販的意見調查站。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Chart.js，依據條例生成投票平台程式碼：1. 問卷設計；2. 數據統計；3. 結果展示。貼上需求：［條例描述，例如：藍色調 #1E90FF、含柱狀圖］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 17,
        "title": "在線預約系統",
        "level": "intermediate",
        "category": "Booking",
        "slug": "online-booking-system",
        "keywords": ["React", "React Hook Form", "預約", "日曆", "通知"],
        "description": "打造預約系統，如夜市美食攤的訂位平台。",
        "prompt": "【零代碼提示 🚀】使用 React 和 React Hook Form，依據條例生成預約系統程式碼：1. 預約流程；2. 日曆視圖；3. 提醒通知。貼上需求：［條例描述，例如：綠色調 #32CD32、含日期選擇器］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 18,
        "title": "社交活動平台",
        "level": "intermediate",
        "category": "Community",
        "slug": "social-event-platform",
        "keywords": ["React", "Firebase", "活動", "報名", "通知"],
        "description": "打造活動平台，如夜市攤販的社區公告欄。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成活動平台程式碼：1. 活動管理；2. 報名互動；3. 通知功能。貼上需求：［條例描述，例如：橙色調 #FF8C00、含即時通知］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 19,
        "title": "客服與工單系統",
        "level": "intermediate",
        "category": "Customer Support",
        "slug": "customer-service-ticketing",
        "keywords": ["React", "Socket.io", "客服", "工單", "即時"],
        "description": "打造客服系統，如夜市攤販的 24 小時服務站。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Socket.io，依據條例生成客服系統程式碼：1. 諮詢聊天；2. 工單追蹤；3. 自動回覆。貼上需求：［條例描述，例如：藍色調 #4682B4、含即時聊天］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 20,
        "title": "移動端應用 UI",
        "level": "intermediate",
        "category": "Mobile",
        "slug": "mobile-app-ui",
        "keywords": ["React Native", "UI", "移動端", "原型", "適配"],
        "description": "打造移動 UI，如夜市攤販的行動菜單。",
        "prompt": "【零代碼提示 🚀】使用 React Native，依據條例生成移動 UI 程式碼：1. 原型設計；2. 直觀介面；3. 適配裝置。貼上需求：［條例描述，例如：紅色調 #FF4500、支援 iOS 與 Android］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 21,
        "title": "桌面應用界面 (Electron)",
        "level": "advanced",
        "category": "Desktop",
        "slug": "desktop-app-interface-electron",
        "keywords": ["Electron", "React", "桌面應用", "介面", "後台"],
        "description": "打造 Electron 應用，如夜市攤販的高端辦公工具。",
        "prompt": "【零代碼提示 🚀】使用 Electron 和 React，依據條例生成桌面應用程式碼：1. 介面設計；2. 功能分區；3. 後台整合。貼上需求：［條例描述，例如：灰色調 #696969、含檔案管理］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 22,
        "title": "第三方支付系統",
        "level": "advanced",
        "category": "Payment",
        "slug": "third-party-payment-system",
        "keywords": ["React", "Stripe", "支付", "交易", "安全"],
        "description": "打造支付系統，如夜市攤販的多功能收銀機。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Stripe，依據條例生成支付系統程式碼：1. 支付 API；2. 交易處理與安全。貼上需求：［條例描述，例如：綠色調 #32CD32、支援信用卡］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 23,
        "title": "第三方登入 (OAuth)",
        "level": "intermediate",
        "category": "Authentication",
        "slug": "third-party-oauth-login",
        "keywords": ["React", "OAuth", "登入", "認證", "同步"],
        "description": "打造 OAuth 登入，如夜市攤販的多重身份通行證。",
        "prompt": "【零代碼提示 🚀】使用 React 和 OAuth（如 Google OAuth），依據條例生成登入系統程式碼：1. OAuth 整合；2. 資料同步。貼上需求：［條例描述，例如：藍色調 #1E90FF、支援 Google 登入］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 24,
        "title": "電子郵件通知系統",
        "level": "intermediate",
        "category": "Notification",
        "slug": "email-notification-system",
        "keywords": ["React", "Node.js", "郵件", "通知", "定時"],
        "description": "打造郵件系統，如夜市攤販的自動優惠推送。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Node.js（含 nodemailer），依據條例生成郵件系統程式碼：1. 內容生成；2. 定時發送。貼上需求：［條例描述，例如：橙色調 #FFA500、每日發送］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 25,
        "title": "內容管理系統 (CMS)",
        "level": "advanced",
        "category": "Content Management",
        "slug": "content-management-system",
        "keywords": ["React", "Firebase", "CMS", "文章", "權限"],
        "description": "打造 CMS，如夜市攤販的線上雜誌編輯室。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成 CMS 程式碼：1. 文章編輯；2. 分類搜尋；3. 權限管理。貼上需求：［條例描述，例如：藍色調 #4169E1、含管理員權限］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 26,
        "title": "線上音樂平台",
        "level": "advanced",
        "category": "Multimedia",
        "slug": "online-music-platform",
        "keywords": ["React", "Web Audio", "音樂", "串流", "歌單"],
        "description": "打造音樂平台，如夜市攤販的線上音樂會。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Web Audio API，依據條例生成音樂平台程式碼：1. 播放器與串流；2. 歌單管理；3. 用戶互動。貼上需求：［條例描述，例如：紫色調 #800080、支援 MP3 播放］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 27,
        "title": "在線視頻直播平台",
        "level": "advanced",
        "category": "Multimedia",
        "slug": "online-video-streaming-platform",
        "keywords": ["React", "WebRTC", "直播", "聊天", "互動"],
        "description": "打造直播平台，如夜市的線上直播節目。",
        "prompt": "【零代碼提示 🚀】使用 React 和 WebRTC，依據條例生成直播平台程式碼：1. 直播流整合；2. 即時聊天；3. 評論回饋。貼上需求：［條例描述，例如：紅色調 #FF4500、支援即時評論］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 28,
        "title": "用戶行為分析系統",
        "level": "advanced",
        "category": "Analytics",
        "slug": "user-behavior-analytics",
        "keywords": ["React", "D3.js", "分析", "行為", "圖表"],
        "description": "打造分析系統，如夜市攤販的顧客行為洞察。",
        "prompt": "【零代碼提示 🚀】使用 React 和 D3.js，依據條例生成分析系統程式碼：1. 數據收集；2. 分析預測；3. 圖表展示。貼上需求：［條例描述，例如：藍綠調 #20B2AA、含熱力圖］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 29,
        "title": "企業協作平台",
        "level": "advanced",
        "category": "Collaboration",
        "slug": "enterprise-collaboration-platform",
        "keywords": ["React", "Socket.io", "協作", "文件", "聊天"],
        "description": "打造協作平台，如夜市攤販的數位會議室。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Socket.io，依據條例生成協作平台程式碼：1. 文件共享；2. 任務分派；3. 即時聊天。貼上需求：［條例描述，例如：灰藍調 #708090、支援即時協作］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 30,
        "title": "自訂化儀表板",
        "level": "advanced",
        "category": "Data Visualization",
        "slug": "customizable-dashboard",
        "keywords": ["React", "Chart.js", "儀表板", "圖表", "報表"],
        "description": "打造儀表板，如夜市攤販的專屬數據中心。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Chart.js，依據條例生成儀表板程式碼：1. 自訂圖表；2. 報表生成。貼上需求：［條例描述，例如：藍色調 #1E90FF、含圓環圖］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 31,
        "title": "聊天機器人系統",
        "level": "advanced",
        "category": "AI",
        "slug": "chatbot-system",
        "keywords": ["React", "ChatGPT", "聊天", "客服", "自動"],
        "description": "打造聊天機器人，如夜市攤販的全天候客服。",
        "prompt": "【零代碼提示 🚀】使用 React 和 ChatGPT API，依據條例生成聊天機器人程式碼：1. 自動回覆；2. 客服後台。貼上需求：［條例描述，例如：綠色調 #32CD32、支援語音輸入］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 32,
        "title": "在線測驗平台",
        "level": "intermediate",
        "category": "Education",
        "slug": "online-quiz-platform",
        "keywords": ["React", "React Hook Form", "測驗", "題庫", "評分"],
        "description": "打造測驗平台，如夜市攤販的數位考試站。",
        "prompt": "【零代碼提示 🚀】使用 React 和 React Hook Form，依據條例生成測驗平台程式碼：1. 題庫管理；2. 自動評分。貼上需求：［條例描述，例如：藍色調 #4682B4、含選擇題］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 33,
        "title": "健身追蹤平台",
        "level": "intermediate",
        "category": "Health",
        "slug": "fitness-tracking-platform",
        "keywords": ["React", "Firebase", "健身", "數據", "社群"],
        "description": "打造健身平台，如夜市攤販的數位健身俱樂部。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成健身平台程式碼：1. 數據記錄；2. 分析報告；3. 社群互動。貼上需求：［條例描述，例如：橙色調 #FFA500、含步數追蹤］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 34,
        "title": "智慧家居控制",
        "level": "advanced",
        "category": "IoT",
        "slug": "smart-home-control",
        "keywords": ["React", "IoT", "智慧家居", "遠端", "安全"],
        "description": "打造家居系統，如夜市攤販的智能中控台。",
        "prompt": "【零代碼提示 🚀】使用 React 和 IoT 框架（如 AWS IoT），依據條例生成家居控制程式碼：1. IoT 整合；2. 遠端控制；3. 安全防護。貼上需求：［條例描述，例如：藍色調 #1E90FF、含燈光控制］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 35,
        "title": "餐廳預訂系統",
        "level": "intermediate",
        "category": "Booking",
        "slug": "restaurant-booking-system",
        "keywords": ["React", "React Hook Form", "預訂", "點餐", "評價"],
        "description": "打造預訂系統，如夜市美食攤的數位訂位平台。",
        "prompt": "【零代碼提示 🚀】使用 React 和 React Hook Form，依據條例生成預訂系統程式碼：1. 訂位與座位；2. 點餐功能；3. 評價通知。貼上需求：［條例描述，例如：紅色調 #FF4500、含座位圖］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 36,
        "title": "移動支付應用",
        "level": "advanced",
        "category": "Payment",
        "slug": "mobile-payment-app",
        "keywords": ["React Native", "Stripe", "支付", "安全", "交易"],
        "description": "打造支付應用，如夜市攤販的電子錢包。",
        "prompt": "【零代碼提示 🚀】使用 React Native 和 Stripe，依據條例生成支付應用程式碼：1. 支付整合；2. 認證安全；3. 交易記錄。貼上需求：［條例描述，例如：綠色調 #32CD32、支援 QR 碼掃描］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 37,
        "title": "地圖定位服務",
        "level": "advanced",
        "category": "Location",
        "slug": "map-location-service",
        "keywords": ["React", "Google Maps", "地圖", "定位", "導航"],
        "description": "打造定位應用，如夜市攤販的數位導航儀。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Google Maps API，依據條例生成定位服務程式碼：1. 地圖 API 整合；2. 搜尋與導航功能。貼上需求：［條例描述，例如：藍色調 #4169E1、含路線規劃與地標搜尋］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 38,
        "title": "遊戲排行榜系統",
        "level": "intermediate",
        "category": "Gaming",
        "slug": "game-leaderboard-system",
        "keywords": ["React", "Firebase", "排行榜", "遊戲", "成就"],
        "description": "打造排行榜，如夜市攤販的線上競技平台。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成排行榜程式碼：1. 數據收集；2. 排行生成；3. 成就展示。貼上需求：［條例描述，例如：橙色調 #FF8C00、含即時排名與獎勵徽章］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 39,
        "title": "文件儲存平台",
        "level": "intermediate",
        "category": "Storage",
        "slug": "document-storage-platform",
        "keywords": ["React", "AWS S3", "文件", "儲存", "分享"],
        "description": "打造儲存平台，如夜市攤販的雲端儲藏櫃。",
        "prompt": "【零代碼提示 🚀】使用 React 和 AWS S3，依據條例生成儲存平台程式碼：1. 文件管理；2. 權限設定；3. 分享連結。貼上需求：［條例描述，例如：藍色調 #1E90FF、支援 PDF 上傳與下載］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 40,
        "title": "個人作品集網站",
        "level": "beginner",
        "category": "Portfolio",
        "slug": "personal-portfolio-website",
        "keywords": ["React", "Tailwind CSS", "作品集", "展示", "聯絡"],
        "description": "打造作品集，如夜市攤販的數位名片。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Tailwind CSS，依據條例生成作品集程式碼：1. 作品展示；2. 技能介紹；3. 聯絡資訊。貼上需求：［條例描述，例如：紫色調 #800080、含三個作品與聯絡表單］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 41,
        "title": "IoT 數據監控",
        "level": "advanced",
        "category": "IoT",
        "slug": "iot-data-monitoring",
        "keywords": ["React", "AWS IoT", "監控", "數據", "報警"],
        "description": "打造監控平台，如夜市攤販的智慧工廠中樞。",
        "prompt": "【零代碼提示 🚀】使用 React 和 AWS IoT，依據條例生成監控平台程式碼：1. IoT 整合；2. 數據監控；3. 報警展示。貼上需求：［條例描述，例如：藍綠調 #20B2AA、含溫度監控與警報通知］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 42,
        "title": "零代碼網頁工具",
        "level": "advanced",
        "category": "No-Code",
        "slug": "no-code-web-tool",
        "keywords": ["React", "Drag-and-Drop", "網頁工具", "零代碼", "模組"],
        "description": "打造網頁工具，如夜市攤販的積木拼裝站。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Drag-and-Drop 庫（如 react-beautiful-dnd），依據條例生成網頁工具程式碼：1. 拖拉介面；2. 模組組件；3. 互動功能。貼上需求：［條例描述，例如：灰色調 #696969、含文字與圖片模組］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 43,
        "title": "零代碼博客平台",
        "level": "intermediate",
        "category": "No-Code",
        "slug": "no-code-blog-platform",
        "keywords": ["React", "Firebase", "博客", "零代碼", "編輯"],
        "description": "打造博客平台，如夜市攤販的可視化日誌站。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成博客平台程式碼：1. 拖拉編輯；2. 內容管理；3. 主題選擇。貼上需求：［條例描述，例如：藍色調 #4682B4、支援三種主題與即時預覽］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 44,
        "title": "工作流程自動化",
        "level": "advanced",
        "category": "Automation",
        "slug": "workflow-automation",
        "keywords": ["React", "Node.js", "自動化", "流程", "通知"],
        "description": "打造自動化平台，如夜市攤販的流程畫板。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Node.js，依據條例生成自動化平台程式碼：1. 流程設計；2. 模組規則；3. 提醒通知。貼上需求：［條例描述，例如：綠色調 #32CD32、含每日提醒與條件觸發］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 45,
        "title": "雲端資料庫管理",
        "level": "advanced",
        "category": "Database",
        "slug": "cloud-database-management",
        "keywords": ["React", "Firebase", "資料庫", "監控", "備份"],
        "description": "打造資料庫平台，如夜市攞販的雲端數據中心。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Firebase，依據條例生成資料庫程式碼：1. 監控備份；2. 資料維護。貼上需求：［條例描述，例如：藍色調 #1E90FF、支援即時備份與數據視覺化］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 46,
        "title": "零代碼移動應用",
        "level": "advanced",
        "category": "No-Code",
        "slug": "no-code-mobile-app",
        "keywords": ["React Native", "零代碼", "移動應用", "模板", "部署"],
        "description": "打造移動應用生成器，如夜市攤販的可視化設計站。",
        "prompt": "【零代碼提示 🚀】使用 React Native，依據條例生成移動應用程式碼：1. 模板選擇；2. 介面配置；3. 部署流程。貼上需求：［條例描述，例如：紅色調 #FF4500、支援三種模板與一鍵部署］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 47,
        "title": "內容生成平台",
        "level": "advanced",
        "category": "AI",
        "slug": "content-generation-platform",
        "keywords": ["React", "ChatGPT", "內容生成", "AI", "排版"],
        "description": "打造內容平台，如夜市攤販的 AI 文案助手。",
        "prompt": "【零代碼提示 🚀】使用 React 和 ChatGPT API，依據條例生成內容平台程式碼：1. AI 整合；2. 自動排版。貼上需求：［條例描述，例如：紫色調 #800080、支援文章生成與格式調整］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 48,
        "title": "數據分析與預測",
        "level": "advanced",
        "category": "Analytics",
        "slug": "data-analysis-prediction",
        "keywords": ["React", "D3.js", "數據分析", "預測", "可視化"],
        "description": "打造分析平台，如夜市攤販的智慧商業工具。",
        "prompt": "【零代碼提示 🚀】使用 React 和 D3.js，依據條例生成分析平台程式碼：1. 數據收集；2. 預測模型；3. 可視化展示。貼上需求：［條例描述，例如：藍綠調 #20B2AA、含趨勢線與數據預測］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 49,
        "title": "零代碼電商平台",
        "level": "advanced",
        "category": "No-Code",
        "slug": "no-code-ecommerce-platform",
        "keywords": ["React", "Redux", "電商", "零代碼", "物流"],
        "description": "打造電商平台，如夜市攞販的一站式購物中心。",
        "prompt": "【零代碼提示 🚀】使用 React 和 Redux，依據條例生成電商平台程式碼：1. 商品展示；2. 訂單支付；3. 物流管理。貼上需求：［條例描述，例如：綠色調 #28A745、含物流追蹤與支付選項］。",
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 50,
        "title": "線上醫療預約系統",
        "level": "intermediate",
        "category": "Healthcare",
        "slug": "online-medical-booking-system",
        "keywords": ["React", "React Hook Form", "醫療", "預約", "通知"],
        "description": "打造醫療預約系統，如夜市攞販的數位掛號站。",
        "prompt": "【零代碼提示 🚀】使用 React 和 React Hook Form，依據條例生成醫療預約程式碼：1. 預約流程；2. 醫生排班；3. 提醒通知。貼上需求：［條例描述，例如：藍色調 #4169E1、含時間選擇器與簡訊通知］。",
        "lastUpdated": "2025-03-01"
      }
    ]
  },
  "functionality": {
    "overview": "為開發者提供 50 個主流技術的功能協助，根據具體需求實現應用，從基礎優化到進階整合。",
    "items": [
      {
        "number": 1,
        "title": "協助實現 React Query 的資料同步與快取",
        "level": "intermediate",
        "category": "Data Fetching",
        "slug": "react-query-data-sync-cache",
        "keywords": [
          "React Query",
          "資料同步",
          "快取",
          "API",
          "非同步",
          "前端資料"
        ],
        "description": "React Query 像台南市場的補貨員，自動保持數據新鮮高效。",
        "prompt": "【功能應用】我需要使用 React Query 實現資料同步與快取。請根據我的需求協助完成：［請描述您的具體需求，如 '從 API 獲取天氣資料並快取 5 分鐘'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 API 端點與資料結構（如 'https://api.weather.com'）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望減少重複請求'）"
        ],
        "applicationScenarios": ["天氣預報", "股票數據展示", "新聞更新"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 2,
        "title": "協助實現 Vite 的快速前端構建",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "vite-fast-frontend-build",
        "keywords": ["Vite", "構建工具", "熱重載", "ESM", "前端開發", "效能"],
        "description": "Vite 如高鐵般迅捷，讓前端開發一氣呵成。",
        "prompt": "【功能應用】我需要使用 Vite 構建快速前端專案。請根據我的需求協助完成：［請描述您的具體需求，如 '配置 Tailwind CSS 插件' 或 '優化生產環境打包'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Vite 配置文件（vite.config.js）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望打包大小低於 500KB'）"
        ],
        "applicationScenarios": ["快速原型", "React 應用", "模組化前端"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 3,
        "title": "協助實現 Astro 的高性能靜態網站",
        "level": "advanced",
        "category": "Frameworks",
        "slug": "astro-high-performance-static-site",
        "keywords": ["Astro", "靜態網站", "SSR", "島狀架構", "SEO", "高效前端"],
        "description": "Astro 如台北車站的拼裝工廠，快速生成高效靜態網站。",
        "prompt": "【功能應用】我需要使用 Astro 構建高性能靜態網站。請根據我的需求協助完成：［請描述您的具體需求，如 '整合 React 組件生成部落格' 或 '優化 SEO'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Astro 項目結構與程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望首屏載入低於 1 秒'）"
        ],
        "applicationScenarios": ["個人部落格", "企業官網", "產品展示頁"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 4,
        "title": "協助實現 WebAssembly 的前端性能提升",
        "level": "advanced",
        "category": "Performance",
        "slug": "webassembly-performance-boost",
        "keywords": [
          "WebAssembly",
          "WASM",
          "高性能",
          "Rust",
          "前端優化",
          "二進制"
        ],
        "description": "WebAssembly 如火箭引擎，為前端注入超強動力。",
        "prompt": "【功能應用】我需要使用 WebAssembly 提升前端性能。請根據我的需求協助完成：［請描述您的具體需求，如 '將 Rust 計算模組整合至 React'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 WebAssembly 模組（.wasm）或源程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望計算速度提升 50%'）"
        ],
        "applicationScenarios": ["圖形編輯器", "遊戲模組", "音視頻處理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 5,
        "title": "協助實現 Serverless 的後端服務部署",
        "level": "advanced",
        "category": "Backend",
        "slug": "serverless-backend-deployment",
        "keywords": [
          "Serverless",
          "AWS Lambda",
          "雲端函式",
          "後端部署",
          "事件驅動"
        ],
        "description": "Serverless 如自動化工廠，無需操心伺服器即可運行服務。",
        "prompt": "【功能應用】我需要使用 Serverless 部署後端服務。請根據我的需求協助完成：［請描述您的具體需求，如 '設置 AWS Lambda 處理 API 請求'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的雲端服務提供商與配置（如 AWS Lambda）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望響應時間低於 200ms'）"
        ],
        "applicationScenarios": ["API 端點", "事件處理", "資料處理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 6,
        "title": "協助實現 GraphQL 的高效資料查詢",
        "level": "intermediate",
        "category": "API",
        "slug": "graphql-efficient-data-fetching",
        "keywords": [
          "GraphQL",
          "資料查詢",
          "API",
          "schema",
          "Apollo Client",
          "前端後端"
        ],
        "description": "GraphQL 如夜市攤販的自選菜單，按需提供資料。",
        "prompt": "【功能應用】我需要使用 GraphQL 實現高效資料查詢。請根據我的需求協助完成：［請描述您的具體需求，如 '從 API 獲取用戶資料並設計 schema'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 GraphQL schema 或查詢程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望減少資料冗餘'）"
        ],
        "applicationScenarios": ["社群媒體動態", "電商查詢", "內容管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 7,
        "title": "協助實現 TypeScript 的 React 應用穩定性",
        "level": "intermediate",
        "category": "React",
        "slug": "typescript-react-stability",
        "keywords": ["TypeScript", "React", "類型安全", "靜態檢查", "穩定性"],
        "description": "TypeScript 如夜市攤販的盔甲，保護 React 應用穩定運行。",
        "prompt": "【功能應用】我需要使用 TypeScript 提升 React 應用穩定性。請根據我的需求協助完成：［請描述您的具體需求，如 '為計數器組件定義 props 類型'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 TypeScript 配置文件（tsconfig.json）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望消除類型錯誤'）"
        ],
        "applicationScenarios": ["企業應用", "大型專案", "團隊協作"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 8,
        "title": "協助實現 Docker 的前端容器化",
        "level": "advanced",
        "category": "DevOps",
        "slug": "docker-frontend-containerization",
        "keywords": ["Docker", "容器化", "前端部署", "環境一致性", "DevOps"],
        "description": "Docker 如夜市攤販的標準化廚具，讓前端部署一致穩定。",
        "prompt": "【功能應用】我需要使用 Docker 容器化前端應用。請根據我的需求協助完成：［請描述您的具體需求，如 '為 React 應用撰寫 Dockerfile'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Dockerfile 或 docker-compose 配置",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望跨環境一致'）"
        ],
        "applicationScenarios": ["生產部署", "本地開發", "CI/CD 流程"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 9,
        "title": "協助實現微前端架構的模組化應用",
        "level": "advanced",
        "category": "Architecture",
        "slug": "micro-frontend-modular-app",
        "keywords": ["微前端", "模組化", "架構", "React", "獨立部署"],
        "description": "微前端如夜市攪販的模組化拼盤，讓應用靈活可拆分。",
        "prompt": "【功能應用】我需要使用微前端架構實現模組化應用。請根據我的需求協助完成：［請描述您的具體需求，如 '整合 React 與 Vue 模組'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的微前端架構設計與程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望模組間通信順暢'）"
        ],
        "applicationScenarios": ["企業應用", "跨團隊開發", "遺留系統整合"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 10,
        "title": "協助實現 AI 整合的前端互動性",
        "level": "advanced",
        "category": "AI",
        "slug": "ai-frontend-interactivity",
        "keywords": ["AI", "ChatGPT", "React", "前端互動", "智能"],
        "description": "AI 整合如夜市攤販的智能助手，提升前端互動體驗。",
        "prompt": "【功能應用】我需要將 AI（如 ChatGPT API）整合到前端應用。請根據我的需求協助完成：［請描述您的具體需求，如 '實現智能聊天框'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 AI API 端點與配置",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望回應時間低於 1 秒'）"
        ],
        "applicationScenarios": ["智能客服", "內容生成", "推薦系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 11,
        "title": "協助實現 Tailwind CSS 的響應式設計",
        "level": "intermediate",
        "category": "CSS",
        "slug": "tailwind-css-responsive-design",
        "keywords": ["Tailwind CSS", "響應式", "工具類", "設計", "佈局"],
        "description": "Tailwind CSS 如夜市攞販的萬用工具盒，快速打造響應式介面。",
        "prompt": "【功能應用】我需要使用 Tailwind CSS 實現響應式設計。請根據我的需求協助完成：［請描述您的具體需求，如 '設計手機與桌面自適應佈局'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 HTML 結構與 Tailwind 配置（tailwind.config.js）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望手機端流暢顯示'）"
        ],
        "applicationScenarios": ["電商頁面", "手機介面", "儀表板設計"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 12,
        "title": "協助實現 Redux Toolkit 的狀態管理",
        "level": "intermediate",
        "category": "State Management",
        "slug": "redux-toolkit-state-management",
        "keywords": [
          "Redux Toolkit",
          "狀態管理",
          "React",
          "全局狀態",
          "資料流"
        ],
        "description": "Redux Toolkit 如夜市攞販的智能訂單簿，簡化狀態管理。",
        "prompt": "【功能應用】我需要使用 Redux Toolkit 管理應用狀態。請根據我的需求協助完成：［請描述您的具體需求，如 '創建購物車 slice'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Redux store 配置與 slice 程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望減少重複渲染'）"
        ],
        "applicationScenarios": ["購物車", "用戶認證", "即時聊天"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 13,
        "title": "協助實現 Next.js 的伺服器端渲染",
        "level": "advanced",
        "category": "Frameworks",
        "slug": "nextjs-server-side-rendering",
        "keywords": ["Next.js", "SSR", "伺服器端渲染", "SEO", "性能"],
        "description": "Next.js SSR 如夜市攞販的預熱烤箱，提升 SEO 與載入速度。",
        "prompt": "【功能應用】我需要使用 Next.js 實現伺服器端渲染。請根據我的需求協助完成：［請描述您的具體需求，如 '動態獲取產品頁資料'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Next.js 頁面程式碼與 API 路由",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望首屏載入更快'）"
        ],
        "applicationScenarios": ["新聞網站", "部落格", "產品頁"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 14,
        "title": "協助實現 WebRTC 的即時通訊",
        "level": "advanced",
        "category": "Communication",
        "slug": "webrtc-real-time-communication",
        "keywords": ["WebRTC", "即時通訊", "視訊", "音訊", "P2P"],
        "description": "WebRTC 如夜市攞販的即時喊話系統，實現點對點通訊。",
        "prompt": "【功能應用】我需要使用 WebRTC 實現即時通訊。請根據我的需求協助完成：［請描述您的具體需求，如 '設置視訊聊天功能'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 WebRTC 配置與信令服務程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望視訊穩定'）"
        ],
        "applicationScenarios": ["線上會議", "視訊聊天", "遠端協作"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 15,
        "title": "協助實現 Three.js 的 3D 可視化",
        "level": "advanced",
        "category": "Visualization",
        "slug": "threejs-3d-visualization",
        "keywords": ["Three.js", "3D 可視化", "WebGL", "動畫", "圖形"],
        "description": "Three.js 如夜市攞販的 3D 立體招牌，打造視覺震撼。",
        "prompt": "【功能應用】我需要使用 Three.js 實現 3D 可視化效果。請根據我的需求協助完成：［請描述您的具體需求，如 '創建旋轉立方體'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Three.js 場景與物件程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望平滑動畫'）"
        ],
        "applicationScenarios": ["產品展示", "遊戲場景", "數據視覺化"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 16,
        "title": "協助實現 PWA 的網頁應用體驗",
        "level": "intermediate",
        "category": "Web Development",
        "slug": "pwa-web-app-experience",
        "keywords": ["PWA", "漸進式網頁應用", "離線", "推送", "原生體驗"],
        "description": "PWA 如夜市攞販的行動服務站，提升網頁應用體驗。",
        "prompt": "【功能應用】我需要使用 PWA 技術提升網頁應用。請根據我的需求協助完成：［請描述您的具體需求，如 '設置服務工作者實現離線支援'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Service Worker 程式碼與 manifest 文件",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望離線可用'）"
        ],
        "applicationScenarios": ["新聞應用", "離線閱讀", "購物應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 17,
        "title": "協助實現 Jest 的單元測試",
        "level": "intermediate",
        "category": "Testing",
        "slug": "jest-unit-testing",
        "keywords": ["Jest", "單元測試", "React", "測試", "品質"],
        "description": "Jest 如夜市攞販的質檢員，確保程式碼穩定可靠。",
        "prompt": "【功能應用】我需要使用 Jest 為前端應用撰寫單元測試。請根據我的需求協助完成：［請描述您的具體需求，如 '測試 React 按鈕組件'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的測試檔案與被測試程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望覆蓋率達 90%'）"
        ],
        "applicationScenarios": ["組件驗證", "API 測試", "表單邏輯"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 18,
        "title": "協助實現 Cypress 的端到端測試",
        "level": "advanced",
        "category": "Testing",
        "slug": "cypress-end-to-end-testing",
        "keywords": ["Cypress", "端到端測試", "E2E", "自動化", "流程"],
        "description": "Cypress 如夜市攞販模擬顧客點餐，確保應用流程無誤。",
        "prompt": "【功能應用】我需要使用 Cypress 撰寫端到端測試。請根據我的需求協助完成：［請描述您的具體需求，如 '測試登入流程'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Cypress 測試腳本與應用程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望模擬真實用戶行為'）"
        ],
        "applicationScenarios": ["結帳流程", "註冊驗證", "多頁面測試"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 19,
        "title": "協助實現 Web Workers 的效能提升",
        "level": "advanced",
        "category": "Performance",
        "slug": "web-workers-performance-boost",
        "keywords": ["Web Workers", "多執行緒", "效能", "背景任務", "並行"],
        "description": "Web Workers 如夜市攞販的後台幫手，提升前端效能。",
        "prompt": "【功能應用】我需要使用 Web Workers 提升前端效能。請根據我的需求協助完成：［請描述您的具體需求，如 '處理大型數據計算'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Web Worker 程式碼與主執行緒邏輯",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望不阻塞主執行緒'）"
        ],
        "applicationScenarios": ["數據分析", "圖像處理", "即時過濾"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 20,
        "title": "協助實現 Svelte 的輕量應用",
        "level": "intermediate",
        "category": "Frameworks",
        "slug": "svelte-lightweight-app",
        "keywords": ["Svelte", "輕量框架", "編譯時", "高效渲染", "簡單語法"],
        "description": "Svelte 如夜市攞販的輕便攤車，打造高效應用。",
        "prompt": "【功能應用】我需要使用 Svelte 構建輕量前端應用。請根據我的需求協助完成：［請描述您的具體需求，如 '實現動態計數器'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Svelte 組件程式碼與配置",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望打包大小最小化'）"
        ],
        "applicationScenarios": ["輕量儀表板", "快速原型", "小型網站"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 21,
        "title": "協助實現 React Native 的跨平台應用",
        "level": "intermediate",
        "category": "Mobile",
        "slug": "react-native-cross-platform-app",
        "keywords": ["React Native", "移動應用", "跨平台", "iOS", "Android"],
        "description": "React Native 如夜市攞販的行動餐車，打造跨平台應用。",
        "prompt": "【功能應用】我需要使用 React Native 開發跨平台移動應用。請根據我的需求協助完成：［請描述您的具體需求，如 '整合地圖功能'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 React Native 組件與配置",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望兼容 iOS 與 Android'）"
        ],
        "applicationScenarios": ["社交應用", "電商 App", "導航工具"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 22,
        "title": "協助實現 Electron 的桌面應用",
        "level": "advanced",
        "category": "Desktop",
        "slug": "electron-desktop-app",
        "keywords": ["Electron", "桌面應用", "跨平台", "Node.js", "前端技術"],
        "description": "Electron 如夜市攞販的移動辦公室，打造桌面應用。",
        "prompt": "【功能應用】我需要使用 Electron 開發桌面應用。請根據我的需求協助完成：［請描述您的具體需求，如 '訪問本地檔案系統'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Electron 主進程與渲染進程程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望跨平台運行'）"
        ],
        "applicationScenarios": ["文字編輯器", "媒體播放器", "系統工具"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 23,
        "title": "協助實現 Webpack 的前端打包優化",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "webpack-frontend-optimization",
        "keywords": ["Webpack", "前端打包", "模組化", "效能", "樹搖動"],
        "description": "Webpack 如夜市攞販的打包專家，優化前端資源。",
        "prompt": "【功能應用】我需要使用 Webpack 優化前端打包。請根據我的需求協助完成：［請描述您的具體需求，如 '實現代碼分割'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Webpack 配置文件（webpack.config.js）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望打包速度提升'）"
        ],
        "applicationScenarios": ["大型 SPA", "多頁面網站", "資源密集應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 24,
        "title": "協助實現 Babel 的現代 JS 轉譯",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "babel-modern-js-transpilation",
        "keywords": ["Babel", "JavaScript", "轉譯", "ES6+", "相容性"],
        "description": "Babel 如夜市攞販的語言翻譯機，適配各種瀏覽器。",
        "prompt": "【功能應用】我需要使用 Babel 轉譯現代 JavaScript。請根據我的需求協助完成：［請描述您的具體需求，如 '轉譯 ES6 箭頭函式'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Babel 配置文件（.babelrc 或 babel.config.js）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望相容 IE11'）"
        ],
        "applicationScenarios": ["跨瀏覽器應用", "舊系統升級", "新語法使用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 25,
        "title": "協助實現 ESLint 的代碼品質提升",
        "level": "intermediate",
        "category": "Tools",
        "slug": "eslint-code-quality",
        "keywords": ["ESLint", "代碼品質", "靜態分析", "規範", "團隊協作"],
        "description": "ESLint 如夜市攞販的衛生檢查員，提升代碼品質。",
        "prompt": "【功能應用】我需要使用 ESLint 提升代碼品質。請根據我的需求協助完成：［請描述您的具體需求，如 '自訂 React 組件規則'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 ESLint 配置文件（.eslintrc）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望減少潛在錯誤'）"
        ],
        "applicationScenarios": ["大型團隊項目", "開源專案", "代碼審查"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 26,
        "title": "協助實現 Prettier 的代碼格式化",
        "level": "beginner",
        "category": "Tools",
        "slug": "prettier-code-formatting",
        "keywords": ["Prettier", "代碼格式化", "一致性", "美化", "團隊規範"],
        "description": "Prettier 如夜市攞販的清潔員，自動美化代碼風格。",
        "prompt": "【功能應用】我需要使用 Prettier 自動格式化代碼。請根據我的需求協助完成：［請描述您的具體需求，如 '與 ESLint 整合格式化 React 程式碼'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Prettier 配置文件（.prettierrc）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望統一縮進為 2 空格'）"
        ],
        "applicationScenarios": ["團隊協作", "代碼風格統一", "快速開發"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 27,
        "title": "協助實現 Git 的版本控制",
        "level": "beginner",
        "category": "Tools",
        "slug": "git-version-control",
        "keywords": ["Git", "版本控制", "分支", "合併", "協作"],
        "description": "Git 如夜市攞販的進貨日誌，管理版本井然有序。",
        "prompt": "【功能應用】我需要使用 Git 實現版本控制。請根據我的需求協助完成：［請描述您的具體需求，如 '解決分支合併衝突'］。請提供您的命令或配置：［請在此處貼上命令或配置］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Git 命令或配置（如 git log）",
          "目前版本控制的狀態",
          "您遇到的問題或期望的結果（如 '希望合併無衝突'）"
        ],
        "applicationScenarios": ["團隊開發", "開源項目", "代碼追蹤"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 28,
        "title": "協助實現 npm 的依賴管理",
        "level": "beginner",
        "category": "Tools",
        "slug": "npm-dependency-management",
        "keywords": ["npm", "依賴管理", "套件", "腳本", "前端工具"],
        "description": "npm 如夜市攞販的食材庫管，管理依賴輕鬆自如。",
        "prompt": "【功能應用】我需要使用 npm 管理前端依賴。請根據我的需求協助完成：［請描述您的具體需求，如 '解決依賴版本衝突'］。請提供您的 package.json：［請在此處貼上 package.json］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 package.json 檔案",
          "目前依賴管理的狀態",
          "您遇到的問題或期望的結果（如 '希望安裝最新版本'）"
        ],
        "applicationScenarios": ["專案依賴管理", "自動化構建", "套件升級"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 29,
        "title": "協助實現 Yarn 的高效依賴管理",
        "level": "beginner",
        "category": "Tools",
        "slug": "yarn-efficient-dependency-management",
        "keywords": ["Yarn", "依賴管理", "套件", "效能", "並行下載"],
        "description": "Yarn 如夜市攞販的高效進貨員，提升依賴管理效率。",
        "prompt": "【功能應用】我需要使用 Yarn 實現高效依賴管理。請根據我的需求協助完成：［請描述您的具體需求，如 '使用 workspace 管理多專案'］。請提供您的配置：［請在此處貼上 yarn.lock 或配置］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 yarn.lock 檔案或 Yarn 配置",
          "目前依賴管理的狀態",
          "您遇到的問題或期望的結果（如 '希望安裝速度提升'）"
        ],
        "applicationScenarios": ["大型專案", "多專案管理", "快速開發"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 30,
        "title": "協助實現 Rollup 的 JS 庫打包",
        "level": "intermediate",
        "category": "Build Tools",
        "slug": "rollup-js-library-bundling",
        "keywords": ["Rollup", "庫打包", "模組", "樹搖動", "輕量"],
        "description": "Rollup 如夜市攞販的輕便打包機，生成高效 JS 庫。",
        "prompt": "【功能應用】我需要使用 Rollup 打包 JavaScript 庫。請根據我的需求協助完成：［請描述您的具體需求，如 '配置外部依賴打包'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Rollup 配置文件（rollup.config.js）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望輸出 ESM 格式'）"
        ],
        "applicationScenarios": ["開源庫", "UI 組件庫", "工具函式庫"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 31,
        "title": "協助實現 Vue.js 的單頁應用",
        "level": "intermediate",
        "category": "Frameworks",
        "slug": "vuejs-single-page-app",
        "keywords": ["Vue.js", "單頁應用", "SPA", "響應式", "前端框架"],
        "description": "Vue.js 如夜市攞販的靈活攤位，打造響應式單頁應用。",
        "prompt": "【功能應用】我需要使用 Vue.js 構建單頁應用。請根據我的需求協助完成：［請描述您的具體需求，如 '實現動態路由頁面'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Vue.js 組件與配置（如 main.js）",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望頁面切換順暢'）"
        ],
        "applicationScenarios": ["個人網站", "管理面板", "簡單應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 32,
        "title": "協助實現 D3.js 的數據可視化",
        "level": "advanced",
        "category": "Visualization",
        "slug": "d3js-data-visualization",
        "keywords": ["D3.js", "數據可視化", "圖表", "動畫", "前端設計"],
        "description": "D3.js 如夜市攞販的數據畫板，展示生動圖表。",
        "prompt": "【功能應用】我需要使用 D3.js 實現數據可視化。請根據我的需求協助完成：［請描述您的具體需求，如 '創建動態柱狀圖'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 D3.js 程式碼與數據結構",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望圖表互動流暢'）"
        ],
        "applicationScenarios": ["數據儀表板", "報表展示", "統計分析"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 33,
        "title": "協助實現 WebGPU 的高效渲染",
        "level": "advanced",
        "category": "Performance",
        "slug": "webgpu-efficient-rendering",
        "keywords": ["WebGPU", "高效渲染", "圖形", "性能", "前端技術"],
        "description": "WebGPU 如夜市攞販的高效能烤爐，提升渲染速度。",
        "prompt": "【功能應用】我需要使用 WebGPU 實現高效渲染。請根據我的需求協助完成：［請描述您的具體需求，如 '渲染 3D 模型'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 WebGPU 程式碼與配置",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望幀率達 60fps'）"
        ],
        "applicationScenarios": ["遊戲渲染", "3D 可視化", "圖形處理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 34,
        "title": "協助實現 Playwright 的跨瀏覽器測試",
        "level": "advanced",
        "category": "Testing",
        "slug": "playwright-cross-browser-testing",
        "keywords": ["Playwright", "跨瀏覽器", "測試", "自動化", "E2E"],
        "description": "Playwright 如夜市攞販的多功能試吃員，測試跨瀏覽器兼容性。",
        "prompt": "【功能應用】我需要使用 Playwright 實現跨瀏覽器測試。請根據我的需求協助完成：［請描述您的具體需求，如 '測試 Chrome 與 Firefox 上的登入流程'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Playwright 測試腳本",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望測試穩定通過'）"
        ],
        "applicationScenarios": ["跨瀏覽器驗證", "E2E 測試", "應用兼容性"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 35,
        "title": "協助實現 Zustand 的輕量狀態管理",
        "level": "intermediate",
        "category": "State Management",
        "slug": "zustand-lightweight-state-management",
        "keywords": ["Zustand", "狀態管理", "React", "輕量", "簡單"],
        "description": "Zustand 如夜市攞販的輕便記帳本，簡單管理狀態。",
        "prompt": "【功能應用】我需要使用 Zustand 實現輕量狀態管理。請根據我的需求協助完成：［請描述您的具體需求，如 '管理主題切換狀態'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Zustand store 程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望簡單易維護'）"
        ],
        "applicationScenarios": ["主題切換", "表單狀態", "小型應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 36,
        "title": "協助實現 Recoil 的複雜狀態管理",
        "level": "intermediate",
        "category": "State Management",
        "slug": "recoil-complex-state-management",
        "keywords": ["Recoil", "狀態管理", "React", "複雜狀態", "atom"],
        "description": "Recoil 如夜市攞販的精密倉庫，管理複雜狀態。",
        "prompt": "【功能應用】我需要使用 Recoil 實現複雜狀態管理。請根據我的需求協助完成：［請描述您的具體需求，如 '管理用戶與訂單狀態'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Recoil atom 與 selector 程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望狀態同步高效'）"
        ],
        "applicationScenarios": ["用戶管理", "訂單系統", "多層表單"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 37,
        "title": "協助實現 Socket.io 的即時通訊",
        "level": "advanced",
        "category": "Communication",
        "slug": "socketio-real-time-communication",
        "keywords": ["Socket.io", "即時通訊", "WebSocket", "聊天", "同步"],
        "description": "Socket.io 如夜市攞販的即時通報器，實現雙向通訊。",
        "prompt": "【功能應用】我需要使用 Socket.io 實現即時通訊。請根據我的需求協助完成：［請描述您的具體需求，如 '實現多人聊天室'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Socket.io 前後端程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望訊息即時送達'）"
        ],
        "applicationScenarios": ["聊天室", "即時遊戲", "通知系統"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 38,
        "title": "協助實現 Firebase 的實時數據同步",
        "level": "intermediate",
        "category": "Backend",
        "slug": "firebase-real-time-sync",
        "keywords": ["Firebase", "實時數據", "同步", "雲端", "前端後端"],
        "description": "Firebase 如夜市攞販的雲端訂單簿，實現實時同步。",
        "prompt": "【功能應用】我需要使用 Firebase 實現實時數據同步。請根據我的需求協助完成：［請描述您的具體需求，如 '同步待辦清單'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Firebase 配置與程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望數據即時更新'）"
        ],
        "applicationScenarios": ["待辦清單", "用戶資料", "訂單管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 39,
        "title": "協助實現 AWS Amplify 的全端應用",
        "level": "advanced",
        "category": "Full Stack",
        "slug": "aws-amplify-full-stack-app",
        "keywords": ["AWS Amplify", "全端應用", "雲端", "前端後端", "快速開發"],
        "description": "AWS Amplify 如夜市攞販的全能工具箱，快速開發全端應用。",
        "prompt": "【功能應用】我需要使用 AWS Amplify 構建全端應用。請根據我的需求協助完成：［請描述您的具體需求，如 '實現用戶認證與 API'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Amplify 配置與程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望快速部署'）"
        ],
        "applicationScenarios": ["用戶管理", "電商後端", "快速原型"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 40,
        "title": "協助實現 GraphQL Apollo 的客戶端整合",
        "level": "intermediate",
        "category": "API",
        "slug": "graphql-apollo-client-integration",
        "keywords": ["GraphQL", "Apollo Client", "客戶端", "資料查詢", "前端"],
        "description": "Apollo Client 如夜市攞販的快遞員，整合 GraphQL 查詢。",
        "prompt": "【功能應用】我需要使用 GraphQL Apollo Client 整合客戶端。請根據我的需求協助完成：［請描述您的具體需求，如 '從 GraphQL API 獲取用戶資料'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Apollo Client 配置與查詢",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望查詢高效'）"
        ],
        "applicationScenarios": ["動態內容", "複雜數據", "API 整合"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 41,
        "title": "協助實現 Styled-Components 的動態樣式",
        "level": "intermediate",
        "category": "CSS",
        "slug": "styled-components-dynamic-styling",
        "keywords": [
          "Styled-Components",
          "動態樣式",
          "React",
          "CSS-in-JS",
          "設計"
        ],
        "description": "Styled-Components 如夜市攞販的客製化招牌，打造動態樣式。",
        "prompt": "【功能應用】我需要使用 Styled-Components 實現動態樣式。請根據我的需求協助完成：［請描述您的具體需求，如 '設計主題切換按鈕'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Styled-Components 程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望樣式動態更新'）"
        ],
        "applicationScenarios": ["主題按鈕", "動態卡片", "響應式 UI"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 42,
        "title": "協助實現 Framer Motion 的動畫效果",
        "level": "intermediate",
        "category": "Animation",
        "slug": "framer-motion-animation",
        "keywords": ["Framer Motion", "動畫", "React", "視覺效果", "互動"],
        "description": "Framer Motion 如夜市攞販的燈光秀，增添視覺吸引力。",
        "prompt": "【功能應用】我需要使用 Framer Motion 實現動畫效果。請根據我的需求協助完成：［請描述您的具體需求，如 '實現卡片翻轉動畫'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Framer Motion 程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望動畫平滑'）"
        ],
        "applicationScenarios": ["卡片翻轉", "頁面過渡", "互動效果"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 43,
        "title": "協助實現 React Spring 的物理動畫",
        "level": "advanced",
        "category": "Animation",
        "slug": "react-spring-physics-animation",
        "keywords": ["React Spring", "物理動畫", "彈簧", "動態效果", "React"],
        "description": "React Spring 如夜市攞販的彈簧玩具，模擬自然運動。",
        "prompt": "【功能應用】我需要使用 React Spring 實現物理動畫。請根據我的需求協助完成：［請描述您的具體需求，如 '實現按鈕彈跳效果'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 React Spring 程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望模擬真實物理'）"
        ],
        "applicationScenarios": ["彈簧按鈕", "拖拽動畫", "遊戲 UI"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 44,
        "title": "協助實現 Formik 的表單處理",
        "level": "intermediate",
        "category": "Forms",
        "slug": "formik-form-handling",
        "keywords": ["Formik", "表單處理", "React", "驗證", "輸入"],
        "description": "Formik 如夜市攞販的訂單助手，簡化表單處理。",
        "prompt": "【功能應用】我需要使用 Formik 處理表單。請根據我的需求協助完成：［請描述您的具體需求，如 '實現帶驗證的註冊表單'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Formik 表單程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望驗證即時顯示'）"
        ],
        "applicationScenarios": ["註冊表單", "聯絡表單", "訂單輸入"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 45,
        "title": "協助實現 Ant Design 的專業 UI",
        "level": "intermediate",
        "category": "UI",
        "slug": "ant-design-professional-ui",
        "keywords": ["Ant Design", "專業 UI", "React", "設計系統", "組件"],
        "description": "Ant Design 如夜市攞販的精美擺盤，提升 UI 專業度。",
        "prompt": "【功能應用】我需要使用 Ant Design 實現專業 UI。請根據我的需求協助完成：［請描述您的具體需求，如 '設計帶篩選的數據表格'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Ant Design 組件程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望表格響應式'）"
        ],
        "applicationScenarios": ["數據表格", "管理系統", "企業應用"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 46,
        "title": "協助實現 Material-UI 的主題定制",
        "level": "intermediate",
        "category": "UI",
        "slug": "material-ui-theme-customization",
        "keywords": ["Material-UI", "主題定制", "React", "設計", "UI"],
        "description": "Material-UI 如夜市攞販的品牌視覺，統一應用風格。",
        "prompt": "【功能應用】我需要使用 Material-UI 實現主題定制。請根據我的需求協助完成：［請描述您的具體需求，如 '設計暗色模式導航欄'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Material-UI 主題配置程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望風格統一'）"
        ],
        "applicationScenarios": ["導航欄", "卡片佈局", "品牌 UI"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 47,
        "title": "協助實現 RxJS 的異步數據流",
        "level": "advanced",
        "category": "Data Flow",
        "slug": "rxjs-async-data-flow",
        "keywords": ["RxJS", "異步數據流", "觀察者模式", "事件", "反應式"],
        "description": "RxJS 如夜市攞販的訂單流水線，處理異步數據流。",
        "prompt": "【功能應用】我需要使用 RxJS 處理異步數據流。請根據我的需求協助完成：［請描述您的具體需求，如 '實現即時搜尋建議'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 RxJS 程式碼與數據流設計",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望即時反應'）"
        ],
        "applicationScenarios": ["搜尋建議", "事件驅動", "數據同步"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 48,
        "title": "協助實現 Storybook 的 UI 組件開發",
        "level": "intermediate",
        "category": "UI",
        "slug": "storybook-ui-component-development",
        "keywords": ["Storybook", "UI 組件", "設計系統", "視覺化", "協作"],
        "description": "Storybook 如夜市攞販的組件展示櫃，提升設計效率。",
        "prompt": "【功能應用】我需要使用 Storybook 開發 UI 組件。請根據我的需求協助完成：［請描述您的具體需求，如 '創建按鈕組件故事'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 Storybook 配置與組件程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望視覺化測試'）"
        ],
        "applicationScenarios": ["設計系統", "組件文檔", "團隊協作"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 49,
        "title": "協助實現 CI/CD 的自動化部署",
        "level": "advanced",
        "category": "DevOps",
        "slug": "cicd-automated-deployment",
        "keywords": [
          "CI/CD",
          "自動化部署",
          "GitHub Actions",
          "持續集成",
          "DevOps"
        ],
        "description": "CI/CD 如夜市攞販的自動化流水線，提升部署效率。",
        "prompt": "【功能應用】我需要使用 CI/CD 實現自動化部署。請根據我的需求協助完成：［請描述您的具體需求，如 '設置 GitHub Actions 部署 React 應用'］。請提供您的配置：［請在此處貼上配置］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 CI/CD 配置文件（如 .github/workflows）",
          "目前配置的實現狀態",
          "您遇到的問題或期望的結果（如 '希望自動部署成功'）"
        ],
        "applicationScenarios": ["網站部署", "測試自動化", "多環境管理"],
        "lastUpdated": "2025-03-01"
      },
      {
        "number": 50,
        "title": "協助實現 AI-driven UI 的智能設計",
        "level": "advanced",
        "category": "AI",
        "slug": "ai-driven-ui-smart-design",
        "keywords": ["AI-driven UI", "智能設計", "React", "ChatGPT", "前端"],
        "description": "AI-driven UI 如夜市攞販的智能設計師，提升用戶體驗。",
        "prompt": "【功能應用】我需要使用 AI-driven UI 實現智能設計。請根據我的需求協助完成：［請描述您的具體需求，如 '根據用戶輸入動態生成 UI'］。請提供您的程式碼：［請在此處貼上程式碼］，我將幫您實現或優化。",
        "requiredInfo": [
          "您的 AI API 配置與前端程式碼",
          "目前程式碼的實現狀態",
          "您遇到的問題或期望的結果（如 '希望 UI 自適應'）"
        ],
        "applicationScenarios": ["智能表單", "動態佈局", "個性化介面"],
        "lastUpdated": "2025-03-01"
      }
    ]
  }
}
