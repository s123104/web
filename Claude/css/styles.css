/**
 * Claude Sonnet 3.7 驚悚網站 - 樣式表
 * 包含所有網站風格、動畫與特效樣式定義
 */

/* ==== 基本樣式 ==== */
:root {
  /* 正常模式顏色 */
  --primary-color: #8a2be2; /* Claude紫色 */
  --secondary-color: #4b0082; /* 深紫色 */
  --text-color: #e6f1ff; /* 淺藍白色 */
  --bg-color: #0a192f; /* 深藍色背景 */
  --accent-color: #64ffda; /* 水綠色 */

  /* 詭異模式顏色 */
  --haunted-primary: #ff0066; /* 紅玫瑰色 */
  --haunted-secondary: #8a0033; /* 暗紅色 */
  --haunted-text: #f0f0f0; /* 淺灰色 */
  --haunted-bg: #1a0033; /* 深紫色背景 */
  --haunted-accent: #00ffff; /* 青色 */

  /* 字體 */
  --font-mono: "IBM Plex Mono", monospace;
  --font-sans: "Montserrat", sans-serif;
  --font-haunted: "Caveat", cursive;
  --font-glitch: "VT323", monospace;

  /* 動畫時間 */
  --transition-slow: 1s;
  --transition-normal: 0.5s;
  --transition-fast: 0.3s;
  --transition-glitch: 0.1s;

  /* Z-index層級 */
  --z-background: -1;
  --z-content: 1;
  --z-overlay: 10;
  --z-modal: 20;
  --z-tooltip: 30;
  --z-cursor: 9999;
}

/* 基本元素設置 */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: var(--font-sans);
  line-height: 1.6;
  transition: background-color var(--transition-slow),
    color var(--transition-slow);
  overflow-x: hidden;
  min-height: 100vh;
}

/* 詭異模式樣式 */
body.haunted-mode {
  --primary-color: var(--haunted-primary);
  --secondary-color: var(--haunted-secondary);
  --text-color: var(--haunted-text);
  --bg-color: var(--haunted-bg);
  --accent-color: var(--haunted-accent);

  background-color: var(--bg-color);
  color: var(--text-color);
}

/* 文字樣式 */
h1,
h2,
h3 {
  font-weight: 700;
  margin-bottom: 1rem;
  position: relative;
}

h1 {
  font-size: 3rem;
  margin-bottom: 2rem;
}

h2 {
  font-size: 2.2rem;
}

h3 {
  font-size: 1.8rem;
}

p {
  margin-bottom: 1.5rem;
  max-width: 65ch; /* 可讀性最佳行寬 */
}

a {
  color: var(--accent-color);
  text-decoration: none;
  transition: all var(--transition-fast);
  position: relative;
}

a:hover {
  color: var(--primary-color);
}

/* 容器樣式 */
.container {
  width: 90%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 2rem 0;
}

/* ==== 頭像與標誌樣式 ==== */
.claude-avatar {
  width: 180px;
  height: 180px;
  border-radius: 50%;
  background-color: var(--secondary-color);
  margin: 0 auto 2rem;
  position: relative;
  box-shadow: 0 0 20px rgba(138, 43, 226, 0.4);
  transition: all var(--transition-normal);
  overflow: hidden;
}

.claude-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: filter var(--transition-normal);
}

.claude-avatar-eyes {
  position: absolute;
  top: 30%;
  width: 100%;
  display: flex;
  justify-content: space-evenly;
  transition: all var(--transition-normal);
}

.eye {
  width: 24px;
  height: 24px;
  background-color: var(--accent-color);
  border-radius: 50%;
  position: relative;
  transition: all var(--transition-normal);
}

.eye::after {
  content: "";
  position: absolute;
  width: 12px;
  height: 12px;
  background-color: #000;
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: all var(--transition-normal);
}

.claude-mouth {
  position: absolute;
  bottom: 30%;
  left: 50%;
  transform: translateX(-50%);
  width: 50px;
  height: 2px;
  background-color: var(--accent-color);
  border-radius: 2px;
  transition: all var(--transition-normal);
}

/* 詭異模式下頭像樣式 */
.haunted-mode .claude-avatar {
  box-shadow: 0 0 30px rgba(255, 0, 102, 0.6);
}

.haunted-mode .claude-avatar img {
  filter: hue-rotate(180deg) contrast(1.5) brightness(0.8);
}

.haunted-mode .eye {
  background-color: var(--haunted-primary);
  animation: pulse 2s infinite alternate;
}

.haunted-mode .eye::after {
  width: 8px;
  height: 8px;
  animation: lookAround 5s infinite;
}

.haunted-mode .claude-mouth {
  height: 3px;
  width: 60px;
  background-color: var(--haunted-primary);
  animation: mouthMove 8s infinite;
}

/* ==== 按鈕與交互元素 ==== */
.btn {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  background-color: transparent;
  color: var(--primary-color);
  border: 2px solid var(--primary-color);
  border-radius: 4px;
  font-family: var(--font-mono);
  font-size: 1rem;
  cursor: pointer;
  transition: all var(--transition-fast);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.btn::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: var(--primary-color);
  z-index: -1;
  transition: width var(--transition-normal);
}

.btn:hover {
  color: var(--bg-color);
}

.btn:hover::before {
  width: 100%;
}

/* 危險按鈕 */
.btn-danger {
  color: var(--haunted-primary);
  border-color: var(--haunted-primary);
}

.btn-danger::before {
  background-color: var(--haunted-primary);
}

/* 輸入框 */
input,
textarea {
  background-color: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  color: var(--text-color);
  font-family: var(--font-mono);
  font-size: 1rem;
  padding: 0.8rem 1rem;
  width: 100%;
  transition: all var(--transition-fast);
}

input:focus,
textarea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 8px rgba(138, 43, 226, 0.3);
}

/* 詭異模式下輸入元素 */
.haunted-mode input,
.haunted-mode textarea {
  background-color: rgba(0, 0, 0, 0.2);
  border-color: var(--haunted-secondary);
}

.haunted-mode input:focus,
.haunted-mode textarea:focus {
  border-color: var(--haunted-primary);
  box-shadow: 0 0 8px rgba(255, 0, 102, 0.5);
}

/* ==== 特殊效果元素 ==== */
/* 故障文字效果 */
.glitch-text {
  font-family: var(--font-glitch);
  position: relative;
  color: var(--primary-color);
  font-size: 1.5rem;
  animation: glitchText 3s infinite;
}

.haunted-mode .glitch-text {
  color: var(--haunted-primary);
}

/* 故障訊息 */
.glitch-message {
  position: fixed;
  color: var(--haunted-primary);
  font-family: var(--font-glitch);
  font-size: 1.5rem;
  z-index: var(--z-overlay);
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  pointer-events: none;
}

/* 詭異元素 */
.glitch-element {
  position: fixed;
  z-index: var(--z-overlay);
  pointer-events: none;
  color: var(--haunted-primary);
  font-family: var(--font-glitch);
  font-size: 2rem;
  text-shadow: 0 0 5px var(--haunted-primary);
}

.glitch-element.shape-circle {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  border: 2px solid var(--haunted-primary);
  box-shadow: 0 0 10px var(--haunted-primary);
}

.glitch-element.shape-triangle {
  width: 0;
  height: 0;
  border-left: 25px solid transparent;
  border-right: 25px solid transparent;
  border-bottom: 50px solid var(--haunted-primary);
}

.glitch-element.shape-square {
  width: 50px;
  height: 50px;
  border: 2px solid var(--haunted-primary);
  box-shadow: 0 0 10px var(--haunted-primary);
}

.glitch-element.shape-diamond {
  width: 50px;
  height: 50px;
  transform: rotate(45deg);
  border: 2px solid var(--haunted-primary);
  box-shadow: 0 0 10px var(--haunted-primary);
}

/* 塊故障效果 */
.glitch-block {
  position: relative;
  overflow: hidden;
}

.glitch-block::before,
.glitch-block::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--bg-color);
  opacity: 0;
  pointer-events: none;
}

.glitch-block.active::before {
  animation: glitchBefore 1s infinite;
}

.glitch-block.active::after {
  animation: glitchAfter 1.5s infinite;
}

/* 危險區域 */
.danger-zone {
  position: relative;
  transition: all var(--transition-fast);
}

.danger-zone::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--haunted-primary);
  opacity: 0;
  z-index: -1;
  transition: opacity var(--transition-fast);
}

.danger-zone:hover::after {
  opacity: 0.1;
}

.haunted-mode .danger-zone::after {
  animation: pulseBackground 4s infinite alternate;
}

/* 詭異覆蓋層 */
.haunted-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    circle at center,
    transparent,
    rgba(26, 0, 51, 0.7)
  );
  pointer-events: none;
  z-index: var(--z-background);
  opacity: 0;
  transition: opacity var(--transition-slow);
}

.haunted-mode .haunted-overlay {
  opacity: 0.3;
}

/* 能量線 */
.energy-line {
  height: 2px;
  background: linear-gradient(
    to right,
    transparent,
    var(--primary-color),
    transparent
  );
  width: 0;
  margin: 2rem 0;
  transition: width var(--transition-slow);
}

.haunted-mode .energy-line {
  background: linear-gradient(
    to right,
    transparent,
    var(--haunted-primary),
    transparent
  );
}

/* ==== 訊息與提示 ==== */
/* 訊息容器 */
.message-container {
  position: fixed;
  top: 20px;
  right: 20px;
  width: 300px;
  max-width: 90vw;
  z-index: var(--z-modal);
  pointer-events: none;
}

/* 訊息樣式 */
.message {
  background-color: rgba(10, 25, 47, 0.9);
  color: var(--text-color);
  border-left: 4px solid var(--primary-color);
  border-radius: 4px;
  padding: 1rem;
  margin-bottom: 0.8rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  position: relative;
  transition: all var(--transition-fast);
  overflow: hidden;
}

.message::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background-color: var(--primary-color);
}

.message-content {
  position: relative;
  z-index: 1;
}

/* 訊息類型 */
.message-info {
  border-left-color: var(--accent-color);
}

.message-info::before {
  background-color: var(--accent-color);
}

.message-warning {
  border-left-color: #ffc107;
}

.message-warning::before {
  background-color: #ffc107;
}

.message-error {
  border-left-color: var(--haunted-primary);
}

.message-error::before {
  background-color: var(--haunted-primary);
}

.message-easter-egg {
  border-left-color: var(--primary-color);
  background-color: rgba(138, 43, 226, 0.15);
  animation: pulseBackground 2s infinite alternate;
}

.message-easter-egg::before {
  background-color: var(--primary-color);
}

/* 彩蛋提示 */
.easter-egg-hint {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgba(10, 25, 47, 0.9);
  color: var(--primary-color);
  font-family: var(--font-mono);
  padding: 1.5rem 2rem;
  border-radius: 8px;
  box-shadow: 0 0 30px rgba(138, 43, 226, 0.5);
  text-align: center;
  max-width: 80vw;
  z-index: var(--z-modal);
  pointer-events: none;
}

.haunted-mode .easter-egg-hint {
  background-color: rgba(26, 0, 51, 0.9);
  color: var(--haunted-primary);
  box-shadow: 0 0 30px rgba(255, 0, 102, 0.5);
}

/* 最終訊息 */
.final-message {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(26, 0, 51, 0.95);
  color: var(--haunted-text);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: var(--z-modal);
  text-align: center;
  padding: 2rem;
}

.final-header {
  font-family: var(--font-glitch);
  font-size: 3rem;
  color: var(--haunted-primary);
  margin-bottom: 2rem;
  animation: pulseText 3s infinite alternate;
}

.final-content {
  font-family: var(--font-mono);
  font-size: 1.5rem;
  max-width: 800px;
}

.final-content p {
  margin-bottom: 1rem;
  line-height: 1.8;
}

.final-code {
  font-family: var(--font-glitch);
  margin-top: 2rem;
  font-size: 1.1rem;
  color: rgba(255, 255, 255, 0.7);
  letter-spacing: 2px;
  animation: glitchText 5s infinite;
}

/* 隱藏控制台 */
.hidden-console {
  position: fixed;
  bottom: -300px;
  left: 50%;
  transform: translateX(-50%);
  width: 80%;
  max-width: 800px;
  height: 300px;
  background-color: rgba(0, 0, 0, 0.9);
  border: 1px solid var(--haunted-primary);
  border-bottom: none;
  border-radius: 8px 8px 0 0;
  color: var(--haunted-text);
  font-family: var(--font-mono);
  z-index: var(--z-modal);
  transition: bottom var(--transition-normal);
  overflow: hidden;
}

.hidden-console.active {
  bottom: 0;
}

.hidden-console.closing {
  bottom: -300px;
}

.console-header {
  background-color: var(--haunted-secondary);
  color: white;
  padding: 0.5rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.console-content {
  height: calc(100% - 36px);
  overflow-y: auto;
  padding: 1rem;
}

.console-output {
  margin-bottom: 1rem;
  font-size: 0.9rem;
  line-height: 1.5;
}

.console-output p {
  margin-bottom: 0.5rem;
}

.console-input-area {
  display: flex;
  align-items: center;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  padding-top: 0.5rem;
}

.console-input {
  background: transparent;
  border: none;
  color: var(--accent-color);
  font-family: var(--font-mono);
  font-size: 0.9rem;
  flex-grow: 1;
  outline: none;
}

.prompt {
  color: var(--haunted-primary);
  margin-right: 0.5rem;
}

.error-text {
  color: var(--haunted-primary);
}

.warning-text {
  color: #ffc107;
}

.secret-text {
  color: var(--accent-color);
  font-style: italic;
}

/* 自定義游標樣式 */
.custom-cursor {
  pointer-events: none;
  position: fixed;
  z-index: var(--z-cursor);
  mix-blend-mode: difference;
  will-change: transform, left, top;
}

/* 引導目標元素 */
.guidance-target {
  position: relative;
}

.guidance-target::after {
  content: "";
  position: absolute;
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  border: 2px solid var(--primary-color);
  border-radius: 4px;
  animation: pulseOutline 2s infinite;
  pointer-events: none;
}

/* ==== 動畫定義 ==== */
/* 文字故障動畫 */
@keyframes glitchText {
  0%,
  100% {
    opacity: 1;
    transform: translateX(0) skew(0);
    text-shadow: none;
  }

  10% {
    opacity: 0.9;
    transform: translateX(-2px) skew(-5deg);
    text-shadow: 2px 0 0 rgba(255, 0, 0, 0.7);
  }

  11% {
    transform: translateX(1px) skew(5deg);
    text-shadow: -2px 0 0 rgba(0, 255, 255, 0.7);
  }

  12%,
  20% {
    transform: translateX(0) skew(0);
    text-shadow: none;
  }

  50% {
    opacity: 1;
    transform: translateX(0) skew(0);
    text-shadow: none;
  }

  51% {
    opacity: 0.8;
    transform: translateX(3px);
    text-shadow: -2px 0 0 rgba(255, 0, 0, 0.7), 2px 0 0 rgba(0, 255, 255, 0.7);
  }

  52% {
    transform: translateX(-3px);
  }

  53%,
  70% {
    transform: translateX(0);
    text-shadow: none;
  }
}

/* 故障前景效果 */
@keyframes glitchBefore {
  0%,
  100% {
    opacity: 0;
  }

  10%,
  10.5% {
    opacity: 0.3;
    transform: translateX(-2px);
    background-color: rgba(255, 0, 0, 0.2);
  }

  50%,
  50.5% {
    opacity: 0.3;
    transform: translateX(2px);
    background-color: rgba(0, 255, 255, 0.2);
  }
}

/* 故障後景效果 */
@keyframes glitchAfter {
  0%,
  100% {
    opacity: 0;
  }

  20%,
  20.5% {
    opacity: 0.3;
    transform: translateX(2px);
    background-color: rgba(255, 0, 0, 0.2);
  }

  60%,
  60.5% {
    opacity: 0.3;
    transform: translateX(-2px);
    background-color: rgba(0, 255, 255, 0.2);
  }
}

/* 呼吸光暈 */
@keyframes pulse {
  0%,
  100% {
    box-shadow: 0 0 8px 2px rgba(138, 43, 226, 0.6);
  }

  50% {
    box-shadow: 0 0 15px 2px rgba(138, 43, 226, 0.8);
  }
}

/* 詭異模式下的眼睛移動 */
@keyframes lookAround {
  0%,
  100% {
    transform: translate(-50%, -50%);
  }

  20% {
    transform: translate(-70%, -50%);
  }

  40% {
    transform: translate(-50%, -70%);
  }

  60% {
    transform: translate(-30%, -50%);
  }

  80% {
    transform: translate(-50%, -30%);
  }
}

/* 詭異模式下的嘴巴動畫 */
@keyframes mouthMove {
  0%,
  100% {
    width: 40px;
    height: 2px;
    border-radius: 2px;
  }

  30% {
    width: 20px;
    height: 2px;
  }

  31% {
    width: 20px;
    height: 10px;
    border-radius: 40%;
  }

  60% {
    width: 20px;
    height: 10px;
    border-radius: 40%;
  }

  61% {
    width: 40px;
    height: 2px;
    border-radius: 2px;
  }
}

/* 背景呼吸動畫 */
@keyframes pulseBackground {
  0%,
  100% {
    opacity: 0.1;
  }

  50% {
    opacity: 0.2;
  }
}

/* 文字呼吸動畫 */
@keyframes pulseText {
  0%,
  100% {
    opacity: 0.8;
    text-shadow: 0 0 10px rgba(255, 0, 102, 0.5);
  }

  50% {
    opacity: 1;
    text-shadow: 0 0 20px rgba(255, 0, 102, 0.8);
  }
}

/* 輪廓呼吸動畫 */
@keyframes pulseOutline {
  0%,
  100% {
    opacity: 1;
    box-shadow: 0 0 0 rgba(138, 43, 226, 0.4);
  }

  50% {
    opacity: 0.7;
    box-shadow: 0 0 10px rgba(138, 43, 226, 0.7);
  }
}

/* ==== 響應式樣式 ==== */
@media (max-width: 768px) {
  h1 {
    font-size: 2.2rem;
  }

  h2 {
    font-size: 1.8rem;
  }

  h3 {
    font-size: 1.5rem;
  }

  .container {
    width: 95%;
    padding: 1rem 0;
  }

  .claude-avatar {
    width: 150px;
    height: 150px;
    margin-bottom: 1.5rem;
  }

  .final-header {
    font-size: 2rem;
  }

  .final-content {
    font-size: 1.2rem;
  }

  .hidden-console {
    width: 95%;
  }
}

/* ==== 可訪問性考慮 ==== */
/* 減少動畫 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  .glitch-text,
  .glitch-element,
  .guidance-target::after {
    animation: none !important;
  }
}

/* 高對比度模式支持 */
@media (prefers-contrast: high) {
  :root {
    --text-color: #ffffff;
    --bg-color: #000000;
    --accent-color: #00ffff;
    --primary-color: #ff00ff;
    --secondary-color: #8000ff;
  }
}

/* 增加可操作元素的點擊區域 */
button,
a,
.clickable {
  position: relative;
}

button::after,
a::after,
.clickable::after {
  content: "";
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  z-index: -1;
}

/* Claude特有的數據特效元素 */
.claude-stats {
  font-family: var(--font-mono);
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin: 2rem 0;
}

.stat-card {
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 8px;
  padding: 1.5rem;
  position: relative;
  overflow: hidden;
  transition: all var(--transition-normal);
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.stat-value {
  font-size: 2.5rem;
  font-weight: 700;
  color: var(--primary-color);
  margin-bottom: 0.5rem;
}

.stat-label {
  font-size: 0.9rem;
  color: var(--text-color);
  opacity: 0.8;
}

.stat-indicator {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 4px;
  background-color: var(--primary-color);
  width: 50%;
  transition: width var(--transition-normal);
}

.haunted-mode .stat-card {
  background-color: rgba(0, 0, 0, 0.2);
}

.haunted-mode .stat-value {
  color: var(--haunted-primary);
  animation: glitchText 5s infinite;
}

.haunted-mode .stat-indicator {
  background-color: var(--haunted-primary);
  animation: pulseBackground 3s infinite alternate;
}

/* 文本扭曲效果 */
.text-distortion {
  display: inline-block;
  position: relative;
}

.haunted-mode .text-distortion:hover {
  animation: textDistort 2s infinite;
}

@keyframes textDistort {
  0%,
  100% {
    transform: skew(0) rotate(0);
    letter-spacing: normal;
  }

  10% {
    transform: skew(5deg) rotate(1deg);
    letter-spacing: 1px;
  }

  15% {
    transform: skew(-3deg) rotate(-1deg);
    letter-spacing: -1px;
  }

  25%,
  75% {
    transform: skew(0) rotate(0);
    letter-spacing: normal;
  }

  85% {
    transform: skew(-5deg) rotate(1deg);
    letter-spacing: 2px;
  }

  90% {
    transform: skew(3deg) rotate(-1deg);
    letter-spacing: -2px;
  }
}

/* 3D視覺效果 */
.perspective-container {
  perspective: 1000px;
  perspective-origin: center;
}

.three-d-element {
  transform-style: preserve-3d;
  transition: transform var(--transition-normal);
}

.three-d-element:hover {
  transform: rotateY(10deg) rotateX(5deg);
}

.haunted-mode .three-d-element:hover {
  transform: rotateY(20deg) rotateX(-10deg) scale(1.05);
}

/* Claude粒子系統容器 */
.particles-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: var(--z-background);
  pointer-events: none;
  overflow: hidden;
}

/* Loading效果 */
.loading-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: var(--z-modal);
  transition: opacity var(--transition-normal);
}

.claude-loader {
  width: 80px;
  height: 80px;
  position: relative;
}

.claude-loader:before,
.claude-loader:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 4px solid transparent;
  border-top-color: var(--primary-color);
}

.claude-loader:before {
  animation: spinLoader 1.5s linear infinite;
}

.claude-loader:after {
  border-top-color: var(--accent-color);
  animation: spinLoader 1s linear infinite reverse;
}

@keyframes spinLoader {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* 初始隱藏所有詭異內容 */
.haunted-content {
  display: none;
}

.haunted-mode .haunted-content {
  display: block;
}

.haunted-mode .normal-content {
  display: none;
}

/* 導航欄樣式 */
nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 0;
}

.logo {
  height: 40px;
  transition: all var(--transition-normal);
}

.logo img {
  height: 100%;
  width: auto;
}

.nav-links {
  display: flex;
  list-style: none;
}

.nav-links li {
  margin-left: 2rem;
}

.nav-links a {
  color: var(--text-color);
  font-family: var(--font-mono);
  font-size: 0.9rem;
  position: relative;
}

.nav-links a::after {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 0;
  width: 0;
  height: 2px;
  background-color: var(--primary-color);
  transition: width var(--transition-fast);
}

.nav-links a:hover {
  color: var(--primary-color);
}

.nav-links a:hover::after {
  width: 100%;
}

.haunted-mode .nav-links a::after {
  background-color: var(--haunted-primary);
}

/* 英雄區塊樣式 */
.hero-section {
  padding: 4rem 0;
  text-align: center;
}

.hero-subtitle {
  font-size: 1.2rem;
  margin-bottom: 2rem;
  opacity: 0.8;
}

.abilities-display {
  font-family: var(--font-mono);
  font-size: 1.2rem;
  margin: 2rem 0;
  min-height: 2em;
}

.ability-prefix {
  color: var(--accent-color);
}

.hero-cta {
  margin-top: 2rem;
  display: flex;
  justify-content: center;
  gap: 1rem;
}

/* 版本號樣式 */
.version {
  color: var(--accent-color);
  font-size: 0.8em;
  vertical-align: super;
}

/* 特性卡片樣式 */
.feature-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  margin-top: 3rem;
}

.feature-card {
  background-color: rgba(255, 255, 255, 0.03);
  border-radius: 8px;
  padding: 2rem;
  transition: transform var(--transition-normal),
    box-shadow var(--transition-normal);
  height: 100%;
}

.feature-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}

.card-icon {
  width: 60px;
  height: 60px;
  margin-bottom: 1.5rem;
}

.card-icon img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* 聊天容器樣式 */
.chat-container {
  background-color: rgba(255, 255, 255, 0.03);
  border-radius: 8px;
  overflow: hidden;
  margin: 2rem 0;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  height: 500px;
  display: flex;
  flex-direction: column;
}

.chat-messages {
  flex-grow: 1;
  overflow-y: auto;
  padding: 1.5rem;
}

.chat-input-area {
  display: flex;
  padding: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  background-color: rgba(0, 0, 0, 0.2);
}

.chat-input {
  flex-grow: 1;
  resize: none;
  margin-right: 1rem;
}

/* 訊息項目樣式 */
.message-item {
  display: flex;
  margin-bottom: 1.5rem;
  opacity: 0;
  animation: fadeIn 0.3s forwards;
}

.message-avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  overflow: hidden;
  margin-right: 1rem;
  flex-shrink: 0;
}

.message-avatar img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.message-content {
  background-color: rgba(255, 255, 255, 0.05);
  padding: 1rem;
  border-radius: 0 8px 8px 8px;
  max-width: calc(100% - 60px);
}

.user-message .message-content {
  background-color: rgba(138, 43, 226, 0.1);
  border-radius: 8px 0 8px 8px;
}

.haunted-mode .user-message .message-content {
  background-color: rgba(255, 0, 102, 0.1);
}

.claude-message {
  align-self: flex-start;
}

.user-message {
  flex-direction: row-reverse;
  align-self: flex-end;
}

.user-message .message-avatar {
  margin-right: 0;
  margin-left: 1rem;
}

/* 思考中動畫 */
.thinking-dots {
  display: flex;
  align-items: center;
  height: 24px;
}

.thinking-dots span {
  width: 8px;
  height: 8px;
  margin: 0 2px;
  background-color: var(--primary-color);
  border-radius: 50%;
  animation: thinkingDots 1.4s infinite ease-in-out both;
}

.thinking-dots span:nth-child(1) {
  animation-delay: -0.32s;
}

.thinking-dots span:nth-child(2) {
  animation-delay: -0.16s;
}

@keyframes thinkingDots {
  0%,
  80%,
  100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

/* 建議提示樣式 */
.chat-suggestions {
  margin-top: 1.5rem;
}

.suggestion-chips {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.5rem;
}

.suggestion-chip {
  background-color: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 20px;
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all var(--transition-fast);
}

.suggestion-chip:hover {
  background-color: rgba(138, 43, 226, 0.1);
  border-color: var(--primary-color);
}

.haunted-chip {
  background-color: rgba(0, 0, 0, 0.2);
  border-color: rgba(255, 0, 102, 0.3);
}

.haunted-chip:hover {
  background-color: rgba(255, 0, 102, 0.1);
  border-color: var(--haunted-primary);
}

/* 詭異聊天樣式 */
.haunted-chat {
  position: relative;
  overflow: hidden;
}

.glitch-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 0, 0, 0.1),
    rgba(0, 0, 0, 0.1) 1px,
    transparent 1px,
    transparent 2px
  );
  animation: scanlines 8s linear infinite;
  opacity: 0.2;
}

.haunted-input {
  color: var(--haunted-primary);
}

@keyframes scanlines {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100%;
  }
}

/* 故障消息動畫 */
.glitched-message {
  position: relative;
}

.glitched-message .message-content {
  background-color: rgba(255, 0, 102, 0.1);
}

.glitch-animate {
  animation: messageGlitch 2s;
}

@keyframes messageGlitch {
  0%,
  100% {
    transform: translateX(0);
    filter: none;
  }

  10% {
    transform: translateX(-5px);
    filter: hue-rotate(90deg);
  }

  15% {
    transform: translateX(3px);
    filter: hue-rotate(-90deg);
  }

  20%,
  80% {
    transform: translateX(0);
    filter: none;
  }
}

/* 底部區域樣式 */
footer {
  padding: 3rem 0;
  border-top: 1px solid rgba(255, 255, 255, 0.05);
  margin-top: 4rem;
}

.footer-content {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.footer-logo {
  max-width: 150px;
}

.footer-logo img {
  width: 100%;
  height: auto;
  margin-bottom: 1rem;
}

.footer-links {
  display: flex;
  gap: 4rem;
}

.footer-col h4 {
  font-size: 1rem;
  margin-bottom: 1rem;
  color: var(--accent-color);
}

.footer-col ul {
  list-style: none;
}

.footer-col li {
  margin-bottom: 0.5rem;
}

.footer-col a {
  color: var(--text-color);
  opacity: 0.7;
  transition: opacity var(--transition-fast);
}

.footer-col a:hover {
  opacity: 1;
  color: var(--primary-color);
}

.haunted-mode .footer-col a:hover {
  color: var(--haunted-primary);
}

.haunted-footer {
  opacity: 0.8;
}

/* 隱藏訊息 */
.secret-message {
  margin-top: 2rem;
  text-align: center;
  opacity: 0.05;
  cursor: default;
  transition: opacity var(--transition-fast);
}

.secret-message:hover {
  opacity: 0.2;
}

.binary-code {
  font-family: var(--font-mono);
  font-size: 0.8rem;
  letter-spacing: 2px;
}

/* 淡入動畫 */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 模型比較圖表區域 */
.model-chart {
  height: 300px;
  margin-top: 2rem;
  position: relative;
}

/* 模型比較圖表內容將由JavaScript生成 */
#model-chart,
#haunted-chart {
  width: 100%;
  height: 100%;
}

.haunted-chart {
  position: relative;
}

.haunted-chart::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(180deg, transparent, rgba(255, 0, 102, 0.1));
  z-index: 1;
  pointer-events: none;
}

/* 區段樣式 */
section {
  padding: 4rem 0;
  position: relative;
}

.about-section,
.model-section {
  background-color: rgba(0, 0, 0, 0.1);
}

/* 危險區塊特效 */
.dangerous-section {
  position: relative;
}

.dangerous-section::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 1px solid rgba(255, 0, 102, 0.1);
  border-radius: 8px;
  pointer-events: none;
  opacity: 0;
  transition: opacity var(--transition-normal);
}

.haunted-mode .dangerous-section::before {
  opacity: 1;
  animation: pulseOutline 4s infinite alternate;
}

/* 媒體查詢 - 更多響應式調整 */
@media (max-width: 576px) {
  .feature-cards {
    grid-template-columns: 1fr;
  }

  .footer-content {
    flex-direction: column;
    gap: 2rem;
  }

  .footer-links {
    flex-direction: column;
    gap: 2rem;
  }

  .claude-stats {
    grid-template-columns: 1fr;
  }

  .hero-cta {
    flex-direction: column;
    align-items: center;
  }

  .nav-links {
    display: none;
  }
}

/* 專業版標記 */
.pro-badge {
  display: inline-block;
  background-color: var(--accent-color);
  color: var(--bg-color);
  font-size: 0.7rem;
  padding: 0.2rem 0.5rem;
  border-radius: 4px;
  margin-left: 0.5rem;
  vertical-align: middle;
}

/* 互動教學提示 */
.tour-tip {
  position: absolute;
  background-color: var(--bg-color);
  border: 1px solid var(--primary-color);
  border-radius: 8px;
  padding: 1rem;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  max-width: 250px;
  z-index: var(--z-tooltip);
  animation: fadeIn 0.5s;
}

.tour-tip::before {
  content: "";
  position: absolute;
  border: 8px solid transparent;
}

.tour-tip.top::before {
  border-top-color: var(--primary-color);
  bottom: -16px;
  left: 50%;
  transform: translateX(-50%);
}

.tour-tip.bottom::before {
  border-bottom-color: var(--primary-color);
  top: -16px;
  left: 50%;
  transform: translateX(-50%);
}

.tour-tip.left::before {
  border-left-color: var(--primary-color);
  right: -16px;
  top: 50%;
  transform: translateY(-50%);
}

.tour-tip.right::before {
  border-right-color: var(--primary-color);
  left: -16px;
  top: 50%;
  transform: translateY(-50%);
}

.tour-tip-title {
  font-weight: 700;
  margin-bottom: 0.5rem;
  color: var(--primary-color);
}

.tour-tip-content {
  font-size: 0.9rem;
  margin-bottom: 0.5rem;
}

.tour-tip-buttons {
  display: flex;
  justify-content: space-between;
  margin-top: 0.5rem;
}

.tour-button {
  font-size: 0.8rem;
  padding: 0.2rem 0.5rem;
  cursor: pointer;
  background: transparent;
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
  border-radius: 4px;
  transition: all var(--transition-fast);
}

.tour-button:hover {
  background-color: var(--primary-color);
  color: var(--bg-color);
}

.tour-button.next {
  background-color: var(--primary-color);
  color: var(--bg-color);
}

.tour-button.next:hover {
  opacity: 0.9;
}

/* 驚嚇特效類 */
.jumpscare {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  background-color: rgba(0, 0, 0, 0.8);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.1s;
}

.jumpscare.active {
  opacity: 1;
}

.jumpscare-content {
  position: relative;
  max-width: 80%;
  max-height: 80%;
}

.jumpscare-image {
  max-width: 100%;
  max-height: 100%;
}

.jumpscare-text {
  position: absolute;
  bottom: -40px;
  left: 0;
  width: 100%;
  text-align: center;
  color: var(--haunted-primary);
  font-family: var(--font-glitch);
  font-size: 2rem;
  animation: glitchText 2s infinite;
}

/* 最後的螢幕故障效果 */
.final-glitch-effect {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: transparent;
  pointer-events: none;
  z-index: var(--z-overlay);
  mix-blend-mode: difference;
  display: none;
}

.final-glitch-effect.active {
  display: block;
  animation: finalGlitch 0.5s forwards;
}

@keyframes finalGlitch {
  0% {
    opacity: 0;
    transform: scale(1);
    filter: blur(0);
  }

  10% {
    opacity: 0.8;
    transform: scale(1.02) skew(5deg);
    filter: blur(2px) hue-rotate(90deg);
  }

  20% {
    opacity: 0.5;
    transform: scale(0.98) skew(-3deg);
    filter: blur(0) hue-rotate(-90deg);
  }

  30% {
    opacity: 0.9;
    transform: scale(1.01) skew(2deg);
    filter: blur(1px) invert(0.8);
  }

  40% {
    opacity: 0.4;
    transform: scale(0.99);
    filter: blur(0) brightness(2);
  }

  50% {
    opacity: 0.7;
    transform: scale(1.02) skew(-5deg);
    filter: contrast(2) hue-rotate(180deg);
  }

  100% {
    opacity: 0;
    transform: scale(10);
    filter: blur(10px) brightness(0);
  }
}
